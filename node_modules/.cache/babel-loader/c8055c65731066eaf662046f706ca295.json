{"ast":null,"code":"import \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport json from \"../assets/json/cards.json\";\nimport { useRoute } from \"vue-router\";\nexport default {\n  name: \"SCC0219TrabalhoWebItemPageView\",\n  data: function data() {\n    return {\n      router: useRoute(),\n      id: useRoute().query.id,\n      card: json[0],\n      pos: json.findIndex(function (obj) {\n        return obj.id == useRoute().query.id;\n      }),\n      cards: json,\n      qtd: 0,\n      admin: false,\n      qtdCards: 0\n    };\n  },\n  mounted: function mounted() {\n    this.admin = localStorage.admin; // Depois de montado, pegar as cartas do banco de dados, o que pode demorar alguns segundos devido a quantidade de cartas\n\n    this.getCardFromDB();\n    this.qtdCards = this.card.quantity;\n  },\n  methods: {\n    // Função responsável por buscar no banco de dados a quantidade de cartas disponível no estoque\n    getCardFromDB: function getCardFromDB() {\n      var _this = this;\n\n      fetch(\"http://127.0.0.1:3000/cards/getCard\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          id: this.id\n        })\n      }).then(function (res) {\n        res.json().then(function (response) {\n          _this.card = response;\n          _this.qtdCards = _this.card.quantity;\n        })[\"catch\"](function (err) {\n          alert(\"Erro ao procurar quantidade de cartas no estoque!\");\n          console.log(\"Erro: \" + err);\n        });\n      })[\"catch\"](function (err) {\n        console.log(\"Erro: \" + err);\n      });\n    },\n    scrollToTop: function scrollToTop(id) {\n      window.scrollTo(0, 0);\n\n      if (id != -1) {\n        this.card = json.filter(function (obj) {\n          if (obj.id == id) return obj;\n        });\n      }\n    },\n    addToCart: function addToCart(card, qtd) {\n      if (this.qtdCards == 0) {\n        // Não há cartas no estoque, portanto a carta não pode ser adicionada no carrinho\n        alert(\"Não há cartas no estoque!\");\n        return;\n      }\n\n      if (this.qtd == 0) {\n        alert(\"Selecione o número de cartas que deseja adicionar ao carrinho!\");\n        return;\n      }\n\n      card = JSON.parse(JSON.stringify(card));\n      var cart = localStorage.cart == \"\" ? [] : JSON.parse(localStorage.cart);\n      var index = cart.findIndex(function (c) {\n        return c.card.id == card.id;\n      });\n\n      if (index != -1) {\n        cart[index].qtd += qtd;\n      } else {\n        cart.push({\n          card: card,\n          qtd: qtd\n        });\n      }\n\n      localStorage.cart = JSON.stringify(cart);\n      alert(card.name + \" adicionado ao carrinho!\");\n    },\n    getCardHighPrice: function getCardHighPrice(card) {\n      if (card.tcgplayer == null) return 6.5;\n      if (card.tcgplayer.prices == null) return 6.5;\n      if (card.tcgplayer.prices.holofoil != null) return card.tcgplayer.prices.holofoil.market;\n      if (card.tcgplayer.prices.normal != null) return card.tcgplayer.prices.normal.market;\n      return 6.5;\n    },\n    getCardLowPrice: function getCardLowPrice(card) {\n      if (card.tcgplayer == null) return 5.5;\n      if (card.tcgplayer.prices == null) return 5.5;\n      if (card.tcgplayer.prices.holofoil != null) return card.tcgplayer.prices.holofoil.low;\n      if (card.tcgplayer.prices.normal != null) return card.tcgplayer.prices.normal.low;\n      return 5.5;\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["json","useRoute","name","data","router","id","query","card","pos","findIndex","obj","cards","qtd","admin","qtdCards","mounted","localStorage","getCardFromDB","quantity","methods","fetch","method","headers","Accept","body","JSON","stringify","then","res","response","err","alert","console","log","scrollToTop","window","scrollTo","filter","addToCart","parse","cart","index","c","push","getCardHighPrice","tcgplayer","prices","holofoil","market","normal","getCardLowPrice","low"],"sourceRoot":"","sources":["/home/dead/trabalho_web/SCC0219_Trabalho_Web/src/views/ItemPageView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div id=\"item-page-container\">\r\n      <h1\r\n        class=\"titles\"\r\n        style=\"font-size: 200%; margin-left: 10%; margin-bottom: 2%\"\r\n      >\r\n        Item Page\r\n      </h1>\r\n      <div id=\"item-container\">\r\n        <div id=\"item-img\">\r\n          <img :src=\"card.images.small\" :alt=\"card.name\" class=\"card-image\" />\r\n        </div>\r\n        <div id=\"item-info\">\r\n          <h1>{{ card.name }}</h1>\r\n          <h2 class=\"item-price\">${{ getCardLowPrice(card) }}</h2>\r\n          <h3>Ataques</h3>\r\n          <p v-for=\"atack in card.attacks\" v-bind:key=\"atack.name\">\r\n            <b>{{ atack.name }}</b> {{ atack.text }}\r\n          </p>\r\n          <div id=\"edit-item\" v-if=\"admin == 'true'\">\r\n            <p style=\"text-align: center\">\r\n              Quantidade em estoque: {{ this.qtdCards }}\r\n            </p>\r\n            <button\r\n              @click=\"\r\n                scrollToTop(-1);\r\n                $router.push({\r\n                  name: 'editCard',\r\n                  query: { id: card.id },\r\n                });\r\n              \"\r\n            >\r\n              <i class=\"fa fa-shopping-cart\"></i>\r\n              Edit Item\r\n            </button>\r\n          </div>\r\n          <div id=\"itemAddCart\" v-else>\r\n            <p style=\"text-align: center\">\r\n              Quantidade em estoque: {{ this.qtdCards }}\r\n            </p>\r\n            <input v-model=\"qtd\" type=\"number\" :min=\"0\" :max=\"this.qtdCards\" />\r\n            <button @click=\"addToCart(this.card, this.qtd)\">\r\n              <i class=\"fa fa-shopping-cart\"></i>\r\n              Add to Cart\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div id=\"related-items\">\r\n        <h1 class=\"titles\" style=\"font-size: 200%; margin-bottom: 2%\">\r\n          Related Items\r\n        </h1>\r\n        <div class=\"featured-products\">\r\n          <div\r\n            class=\"card\"\r\n            v-for=\"card in cards\r\n              .filter(function (obj) {\r\n                if (obj.rarity === card.rarity) return obj;\r\n              })\r\n              .slice(0, 5)\"\r\n            v-bind:key=\"card.id\"\r\n          >\r\n            <img\r\n              :src=\"card.images.small\"\r\n              :alt=\"card.name\"\r\n              class=\"card-image\"\r\n              @click=\"\r\n                scrollToTop(card.id),\r\n                  $router.push({\r\n                    name: 'itemPage',\r\n                    query: { id: card.id },\r\n                  })\r\n              \"\r\n              style=\"cursor: pointer\"\r\n            />\r\n            <div class=\"card-description\">\r\n              <p class=\"card-type\">{{ card.supertype }}</p>\r\n              <h3\r\n                class=\"card-name\"\r\n                @click=\"\r\n                  scrollToTop(),\r\n                    $router.push({\r\n                      name: 'itemPage',\r\n                      query: { id: card.id },\r\n                    })\r\n                \"\r\n                style=\"cursor: pointer\"\r\n              >\r\n                {{ card.name }}\r\n              </h3>\r\n              <div class=\"card-stars\">\r\n                <i class=\"fa fa-star\"></i>\r\n                <i class=\"fa fa-star\"></i>\r\n                <i class=\"fa fa-star\"></i>\r\n                <i class=\"fa-solid fa-star-sharp-half\"></i>\r\n                <i class=\"fa fa-star-o\"></i>\r\n              </div>\r\n              <p class=\"card-seller\">By {{ card.set.name }}</p>\r\n              <div class=\"card-buy\">\r\n                <p class=\"card-price\">${{ getCardLowPrice(card) }}</p>\r\n                <p class=\"card-original-price\">${{ getCardHighPrice(card) }}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport json from \"../assets/json/cards.json\";\r\nimport { useRoute } from \"vue-router\";\r\n\r\nexport default {\r\n  name: \"SCC0219TrabalhoWebItemPageView\",\r\n\r\n  data() {\r\n    return {\r\n      router: useRoute(),\r\n      id: useRoute().query.id,\r\n      card: json[0],\r\n      pos: json.findIndex((obj) => obj.id == useRoute().query.id),\r\n      cards: json,\r\n      qtd: 0,\r\n      admin: false,\r\n      qtdCards: 0,\r\n    };\r\n  },\r\n\r\n  mounted() {\r\n    this.admin = localStorage.admin;\r\n\r\n    // Depois de montado, pegar as cartas do banco de dados, o que pode demorar alguns segundos devido a quantidade de cartas\r\n    this.getCardFromDB();\r\n\r\n    this.qtdCards = this.card.quantity;\r\n  },\r\n\r\n  methods: {\r\n    // Função responsável por buscar no banco de dados a quantidade de cartas disponível no estoque\r\n    getCardFromDB() {\r\n      fetch(\"http://127.0.0.1:3000/cards/getCard\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          id: this.id,\r\n        }),\r\n      })\r\n        .then((res) => {\r\n          res\r\n            .json()\r\n            .then((response) => {\r\n              this.card = response;\r\n              this.qtdCards = this.card.quantity;\r\n            })\r\n            .catch((err) => {\r\n              alert(\"Erro ao procurar quantidade de cartas no estoque!\");\r\n              console.log(\"Erro: \" + err);\r\n            });\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"Erro: \" + err);\r\n        });\r\n    },\r\n    scrollToTop(id) {\r\n      window.scrollTo(0, 0);\r\n      if (id != -1) {\r\n        this.card = json.filter(function (obj) {\r\n          if (obj.id == id) return obj;\r\n        });\r\n      }\r\n    },\r\n    addToCart(card, qtd) {\r\n      if (this.qtdCards == 0) {\r\n        // Não há cartas no estoque, portanto a carta não pode ser adicionada no carrinho\r\n        alert(\"Não há cartas no estoque!\");\r\n        return;\r\n      }\r\n\r\n      if (this.qtd == 0) {\r\n        alert(\"Selecione o número de cartas que deseja adicionar ao carrinho!\");\r\n        return;\r\n      }\r\n\r\n      card = JSON.parse(JSON.stringify(card));\r\n      let cart = localStorage.cart == \"\" ? [] : JSON.parse(localStorage.cart);\r\n      let index = cart.findIndex((c) => c.card.id == card.id);\r\n      if (index != -1) {\r\n        cart[index].qtd += qtd;\r\n      } else {\r\n        cart.push({ card: card, qtd: qtd });\r\n      }\r\n      localStorage.cart = JSON.stringify(cart);\r\n      alert(card.name + \" adicionado ao carrinho!\");\r\n    },\r\n    getCardHighPrice(card) {\r\n      if (card.tcgplayer == null) return 6.5;\r\n      if (card.tcgplayer.prices == null) return 6.5;\r\n      if (card.tcgplayer.prices.holofoil != null)\r\n        return card.tcgplayer.prices.holofoil.market;\r\n      if (card.tcgplayer.prices.normal != null)\r\n        return card.tcgplayer.prices.normal.market;\r\n      return 6.5;\r\n    },\r\n    getCardLowPrice(card) {\r\n      if (card.tcgplayer == null) return 5.5;\r\n      if (card.tcgplayer.prices == null) return 5.5;\r\n      if (card.tcgplayer.prices.holofoil != null)\r\n        return card.tcgplayer.prices.holofoil.low;\r\n      if (card.tcgplayer.prices.normal != null)\r\n        return card.tcgplayer.prices.normal.low;\r\n      return 5.5;\r\n    },\r\n  },\r\n};\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}