{"ast":null,"code":"import _slicedToArray from \"/home/dead/trabalho_web/SCC0219_Trabalho_Web/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _defineProperty from \"/home/dead/trabalho_web/SCC0219_Trabalho_Web/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _createForOfIteratorHelper from \"/home/dead/trabalho_web/SCC0219_Trabalho_Web/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _toConsumableArray from \"/home/dead/trabalho_web/SCC0219_Trabalho_Web/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"/home/dead/trabalho_web/SCC0219_Trabalho_Web/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/dead/trabalho_web/SCC0219_Trabalho_Web/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.weak-map.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.function.bind.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.object.get-own-property-names.js\";\nimport \"core-js/modules/es.reflect.get.js\";\nimport \"core-js/modules/es.reflect.to-string-tag.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.reflect.set.js\";\nimport \"core-js/modules/es.reflect.delete-property.js\";\nimport \"core-js/modules/es.reflect.has.js\";\nimport \"core-js/modules/es.reflect.own-keys.js\";\nimport \"core-js/modules/es.reflect.get-prototype-of.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.object.is-extensible.js\";\nimport { extend, isArray, isMap, isIntegerKey, hasOwn, isSymbol, isObject, hasChanged, makeMap, capitalize, toRawType, def, isFunction, NOOP } from '@vue/shared';\n\nfunction warn(msg) {\n  var _console;\n\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key2 = 1; _key2 < _len; _key2++) {\n    args[_key2 - 1] = arguments[_key2];\n  }\n\n  (_console = console).warn.apply(_console, [\"[Vue warn] \".concat(msg)].concat(args));\n}\n\nvar activeEffectScope;\n\nvar EffectScope = /*#__PURE__*/function () {\n  function EffectScope() {\n    var detached = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    _classCallCheck(this, EffectScope);\n\n    /**\r\n     * @internal\r\n     */\n    this.active = true;\n    /**\r\n     * @internal\r\n     */\n\n    this.effects = [];\n    /**\r\n     * @internal\r\n     */\n\n    this.cleanups = [];\n\n    if (!detached && activeEffectScope) {\n      this.parent = activeEffectScope;\n      this.index = (activeEffectScope.scopes || (activeEffectScope.scopes = [])).push(this) - 1;\n    }\n  }\n\n  _createClass(EffectScope, [{\n    key: \"run\",\n    value: function run(fn) {\n      if (this.active) {\n        var currentEffectScope = activeEffectScope;\n\n        try {\n          activeEffectScope = this;\n          return fn();\n        } finally {\n          activeEffectScope = currentEffectScope;\n        }\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn(\"cannot run an inactive effect scope.\");\n      }\n    }\n    /**\r\n     * This should only be called on non-detached scopes\r\n     * @internal\r\n     */\n\n  }, {\n    key: \"on\",\n    value: function on() {\n      activeEffectScope = this;\n    }\n    /**\r\n     * This should only be called on non-detached scopes\r\n     * @internal\r\n     */\n\n  }, {\n    key: \"off\",\n    value: function off() {\n      activeEffectScope = this.parent;\n    }\n  }, {\n    key: \"stop\",\n    value: function stop(fromParent) {\n      if (this.active) {\n        var i, l;\n\n        for (i = 0, l = this.effects.length; i < l; i++) {\n          this.effects[i].stop();\n        }\n\n        for (i = 0, l = this.cleanups.length; i < l; i++) {\n          this.cleanups[i]();\n        }\n\n        if (this.scopes) {\n          for (i = 0, l = this.scopes.length; i < l; i++) {\n            this.scopes[i].stop(true);\n          }\n        } // nested scope, dereference from parent to avoid memory leaks\n\n\n        if (this.parent && !fromParent) {\n          // optimized O(1) removal\n          var last = this.parent.scopes.pop();\n\n          if (last && last !== this) {\n            this.parent.scopes[this.index] = last;\n            last.index = this.index;\n          }\n        }\n\n        this.active = false;\n      }\n    }\n  }]);\n\n  return EffectScope;\n}();\n\nfunction effectScope(detached) {\n  return new EffectScope(detached);\n}\n\nfunction recordEffectScope(effect) {\n  var scope = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : activeEffectScope;\n\n  if (scope && scope.active) {\n    scope.effects.push(effect);\n  }\n}\n\nfunction getCurrentScope() {\n  return activeEffectScope;\n}\n\nfunction onScopeDispose(fn) {\n  if (activeEffectScope) {\n    activeEffectScope.cleanups.push(fn);\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(\"onScopeDispose() is called when there is no active effect scope\" + \" to be associated with.\");\n  }\n}\n\nvar createDep = function createDep(effects) {\n  var dep = new Set(effects);\n  dep.w = 0;\n  dep.n = 0;\n  return dep;\n};\n\nvar wasTracked = function wasTracked(dep) {\n  return (dep.w & trackOpBit) > 0;\n};\n\nvar newTracked = function newTracked(dep) {\n  return (dep.n & trackOpBit) > 0;\n};\n\nvar initDepMarkers = function initDepMarkers(_ref) {\n  var deps = _ref.deps;\n\n  if (deps.length) {\n    for (var i = 0; i < deps.length; i++) {\n      deps[i].w |= trackOpBit; // set was tracked\n    }\n  }\n};\n\nvar finalizeDepMarkers = function finalizeDepMarkers(effect) {\n  var deps = effect.deps;\n\n  if (deps.length) {\n    var ptr = 0;\n\n    for (var i = 0; i < deps.length; i++) {\n      var dep = deps[i];\n\n      if (wasTracked(dep) && !newTracked(dep)) {\n        dep[\"delete\"](effect);\n      } else {\n        deps[ptr++] = dep;\n      } // clear bits\n\n\n      dep.w &= ~trackOpBit;\n      dep.n &= ~trackOpBit;\n    }\n\n    deps.length = ptr;\n  }\n};\n\nvar targetMap = new WeakMap(); // The number of effects currently being tracked recursively.\n\nvar effectTrackDepth = 0;\nvar trackOpBit = 1;\n/**\r\n * The bitwise track markers support at most 30 levels of recursion.\r\n * This value is chosen to enable modern JS engines to use a SMI on all platforms.\r\n * When recursion depth is greater, fall back to using a full cleanup.\r\n */\n\nvar maxMarkerBits = 30;\nvar activeEffect;\nvar ITERATE_KEY = Symbol(process.env.NODE_ENV !== 'production' ? 'iterate' : '');\nvar MAP_KEY_ITERATE_KEY = Symbol(process.env.NODE_ENV !== 'production' ? 'Map key iterate' : '');\n\nvar ReactiveEffect = /*#__PURE__*/function () {\n  function ReactiveEffect(fn) {\n    var scheduler = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    var scope = arguments.length > 2 ? arguments[2] : undefined;\n\n    _classCallCheck(this, ReactiveEffect);\n\n    this.fn = fn;\n    this.scheduler = scheduler;\n    this.active = true;\n    this.deps = [];\n    this.parent = undefined;\n    recordEffectScope(this, scope);\n  }\n\n  _createClass(ReactiveEffect, [{\n    key: \"run\",\n    value: function run() {\n      if (!this.active) {\n        return this.fn();\n      }\n\n      var parent = activeEffect;\n      var lastShouldTrack = shouldTrack;\n\n      while (parent) {\n        if (parent === this) {\n          return;\n        }\n\n        parent = parent.parent;\n      }\n\n      try {\n        this.parent = activeEffect;\n        activeEffect = this;\n        shouldTrack = true;\n        trackOpBit = 1 << ++effectTrackDepth;\n\n        if (effectTrackDepth <= maxMarkerBits) {\n          initDepMarkers(this);\n        } else {\n          cleanupEffect(this);\n        }\n\n        return this.fn();\n      } finally {\n        if (effectTrackDepth <= maxMarkerBits) {\n          finalizeDepMarkers(this);\n        }\n\n        trackOpBit = 1 << --effectTrackDepth;\n        activeEffect = this.parent;\n        shouldTrack = lastShouldTrack;\n        this.parent = undefined;\n\n        if (this.deferStop) {\n          this.stop();\n        }\n      }\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      // stopped while running itself - defer the cleanup\n      if (activeEffect === this) {\n        this.deferStop = true;\n      } else if (this.active) {\n        cleanupEffect(this);\n\n        if (this.onStop) {\n          this.onStop();\n        }\n\n        this.active = false;\n      }\n    }\n  }]);\n\n  return ReactiveEffect;\n}();\n\nfunction cleanupEffect(effect) {\n  var deps = effect.deps;\n\n  if (deps.length) {\n    for (var i = 0; i < deps.length; i++) {\n      deps[i][\"delete\"](effect);\n    }\n\n    deps.length = 0;\n  }\n}\n\nfunction effect(fn, options) {\n  if (fn.effect) {\n    fn = fn.effect.fn;\n  }\n\n  var _effect = new ReactiveEffect(fn);\n\n  if (options) {\n    extend(_effect, options);\n    if (options.scope) recordEffectScope(_effect, options.scope);\n  }\n\n  if (!options || !options.lazy) {\n    _effect.run();\n  }\n\n  var runner = _effect.run.bind(_effect);\n\n  runner.effect = _effect;\n  return runner;\n}\n\nfunction stop(runner) {\n  runner.effect.stop();\n}\n\nvar shouldTrack = true;\nvar trackStack = [];\n\nfunction pauseTracking() {\n  trackStack.push(shouldTrack);\n  shouldTrack = false;\n}\n\nfunction enableTracking() {\n  trackStack.push(shouldTrack);\n  shouldTrack = true;\n}\n\nfunction resetTracking() {\n  var last = trackStack.pop();\n  shouldTrack = last === undefined ? true : last;\n}\n\nfunction track(target, type, key) {\n  if (shouldTrack && activeEffect) {\n    var depsMap = targetMap.get(target);\n\n    if (!depsMap) {\n      targetMap.set(target, depsMap = new Map());\n    }\n\n    var dep = depsMap.get(key);\n\n    if (!dep) {\n      depsMap.set(key, dep = createDep());\n    }\n\n    var eventInfo = process.env.NODE_ENV !== 'production' ? {\n      effect: activeEffect,\n      target: target,\n      type: type,\n      key: key\n    } : undefined;\n    trackEffects(dep, eventInfo);\n  }\n}\n\nfunction trackEffects(dep, debuggerEventExtraInfo) {\n  var shouldTrack = false;\n\n  if (effectTrackDepth <= maxMarkerBits) {\n    if (!newTracked(dep)) {\n      dep.n |= trackOpBit; // set newly tracked\n\n      shouldTrack = !wasTracked(dep);\n    }\n  } else {\n    // Full cleanup mode.\n    shouldTrack = !dep.has(activeEffect);\n  }\n\n  if (shouldTrack) {\n    dep.add(activeEffect);\n    activeEffect.deps.push(dep);\n\n    if (process.env.NODE_ENV !== 'production' && activeEffect.onTrack) {\n      activeEffect.onTrack(Object.assign({\n        effect: activeEffect\n      }, debuggerEventExtraInfo));\n    }\n  }\n}\n\nfunction trigger(target, type, key, newValue, oldValue, oldTarget) {\n  var depsMap = targetMap.get(target);\n\n  if (!depsMap) {\n    // never been tracked\n    return;\n  }\n\n  var deps = [];\n\n  if (type === \"clear\"\n  /* CLEAR */\n  ) {\n    // collection being cleared\n    // trigger all effects for target\n    deps = _toConsumableArray(depsMap.values());\n  } else if (key === 'length' && isArray(target)) {\n    depsMap.forEach(function (dep, key) {\n      if (key === 'length' || key >= newValue) {\n        deps.push(dep);\n      }\n    });\n  } else {\n    // schedule runs for SET | ADD | DELETE\n    if (key !== void 0) {\n      deps.push(depsMap.get(key));\n    } // also run for iteration key on ADD | DELETE | Map.SET\n\n\n    switch (type) {\n      case \"add\"\n      /* ADD */\n      :\n        if (!isArray(target)) {\n          deps.push(depsMap.get(ITERATE_KEY));\n\n          if (isMap(target)) {\n            deps.push(depsMap.get(MAP_KEY_ITERATE_KEY));\n          }\n        } else if (isIntegerKey(key)) {\n          // new index added to array -> length changes\n          deps.push(depsMap.get('length'));\n        }\n\n        break;\n\n      case \"delete\"\n      /* DELETE */\n      :\n        if (!isArray(target)) {\n          deps.push(depsMap.get(ITERATE_KEY));\n\n          if (isMap(target)) {\n            deps.push(depsMap.get(MAP_KEY_ITERATE_KEY));\n          }\n        }\n\n        break;\n\n      case \"set\"\n      /* SET */\n      :\n        if (isMap(target)) {\n          deps.push(depsMap.get(ITERATE_KEY));\n        }\n\n        break;\n    }\n  }\n\n  var eventInfo = process.env.NODE_ENV !== 'production' ? {\n    target: target,\n    type: type,\n    key: key,\n    newValue: newValue,\n    oldValue: oldValue,\n    oldTarget: oldTarget\n  } : undefined;\n\n  if (deps.length === 1) {\n    if (deps[0]) {\n      if (process.env.NODE_ENV !== 'production') {\n        triggerEffects(deps[0], eventInfo);\n      } else {\n        triggerEffects(deps[0]);\n      }\n    }\n  } else {\n    var effects = [];\n\n    var _iterator = _createForOfIteratorHelper(deps),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var dep = _step.value;\n\n        if (dep) {\n          effects.push.apply(effects, _toConsumableArray(dep));\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      triggerEffects(createDep(effects), eventInfo);\n    } else {\n      triggerEffects(createDep(effects));\n    }\n  }\n}\n\nfunction triggerEffects(dep, debuggerEventExtraInfo) {\n  // spread into array for stabilization\n  var effects = isArray(dep) ? dep : _toConsumableArray(dep);\n\n  var _iterator2 = _createForOfIteratorHelper(effects),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var _effect2 = _step2.value;\n\n      if (_effect2.computed) {\n        triggerEffect(_effect2, debuggerEventExtraInfo);\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  var _iterator3 = _createForOfIteratorHelper(effects),\n      _step3;\n\n  try {\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      var _effect3 = _step3.value;\n\n      if (!_effect3.computed) {\n        triggerEffect(_effect3, debuggerEventExtraInfo);\n      }\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n}\n\nfunction triggerEffect(effect, debuggerEventExtraInfo) {\n  if (effect !== activeEffect || effect.allowRecurse) {\n    if (process.env.NODE_ENV !== 'production' && effect.onTrigger) {\n      effect.onTrigger(extend({\n        effect: effect\n      }, debuggerEventExtraInfo));\n    }\n\n    if (effect.scheduler) {\n      effect.scheduler();\n    } else {\n      effect.run();\n    }\n  }\n}\n\nvar isNonTrackableKeys = /*#__PURE__*/makeMap(\"__proto__,__v_isRef,__isVue\");\nvar builtInSymbols = new Set( /*#__PURE__*/Object.getOwnPropertyNames(Symbol) // ios10.x Object.getOwnPropertyNames(Symbol) can enumerate 'arguments' and 'caller'\n// but accessing them on Symbol leads to TypeError because Symbol is a strict mode\n// function\n.filter(function (key) {\n  return key !== 'arguments' && key !== 'caller';\n}).map(function (key) {\n  return Symbol[key];\n}).filter(isSymbol));\nvar get = /*#__PURE__*/createGetter();\nvar shallowGet = /*#__PURE__*/createGetter(false, true);\nvar readonlyGet = /*#__PURE__*/createGetter(true);\nvar shallowReadonlyGet = /*#__PURE__*/createGetter(true, true);\nvar arrayInstrumentations = /*#__PURE__*/createArrayInstrumentations();\n\nfunction createArrayInstrumentations() {\n  var instrumentations = {};\n  ['includes', 'indexOf', 'lastIndexOf'].forEach(function (key) {\n    instrumentations[key] = function () {\n      var arr = toRaw(this);\n\n      for (var i = 0, l = this.length; i < l; i++) {\n        track(arr, \"get\"\n        /* GET */\n        , i + '');\n      } // we run the method using the original args first (which may be reactive)\n\n\n      for (var _len2 = arguments.length, args = new Array(_len2), _key3 = 0; _key3 < _len2; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      var res = arr[key].apply(arr, args);\n\n      if (res === -1 || res === false) {\n        // if that didn't work, run it again using raw values.\n        return arr[key].apply(arr, _toConsumableArray(args.map(toRaw)));\n      } else {\n        return res;\n      }\n    };\n  });\n  ['push', 'pop', 'shift', 'unshift', 'splice'].forEach(function (key) {\n    instrumentations[key] = function () {\n      pauseTracking();\n\n      for (var _len3 = arguments.length, args = new Array(_len3), _key4 = 0; _key4 < _len3; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      var res = toRaw(this)[key].apply(this, args);\n      resetTracking();\n      return res;\n    };\n  });\n  return instrumentations;\n}\n\nfunction createGetter() {\n  var isReadonly = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  var shallow = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return function get(target, key, receiver) {\n    if (key === \"__v_isReactive\"\n    /* IS_REACTIVE */\n    ) {\n      return !isReadonly;\n    } else if (key === \"__v_isReadonly\"\n    /* IS_READONLY */\n    ) {\n      return isReadonly;\n    } else if (key === \"__v_isShallow\"\n    /* IS_SHALLOW */\n    ) {\n      return shallow;\n    } else if (key === \"__v_raw\"\n    /* RAW */\n    && receiver === (isReadonly ? shallow ? shallowReadonlyMap : readonlyMap : shallow ? shallowReactiveMap : reactiveMap).get(target)) {\n      return target;\n    }\n\n    var targetIsArray = isArray(target);\n\n    if (!isReadonly && targetIsArray && hasOwn(arrayInstrumentations, key)) {\n      return Reflect.get(arrayInstrumentations, key, receiver);\n    }\n\n    var res = Reflect.get(target, key, receiver);\n\n    if (isSymbol(key) ? builtInSymbols.has(key) : isNonTrackableKeys(key)) {\n      return res;\n    }\n\n    if (!isReadonly) {\n      track(target, \"get\"\n      /* GET */\n      , key);\n    }\n\n    if (shallow) {\n      return res;\n    }\n\n    if (isRef(res)) {\n      // ref unwrapping - skip unwrap for Array + integer key.\n      return targetIsArray && isIntegerKey(key) ? res : res.value;\n    }\n\n    if (isObject(res)) {\n      // Convert returned value into a proxy as well. we do the isObject check\n      // here to avoid invalid value warning. Also need to lazy access readonly\n      // and reactive here to avoid circular dependency.\n      return isReadonly ? readonly(res) : reactive(res);\n    }\n\n    return res;\n  };\n}\n\nvar set = /*#__PURE__*/createSetter();\nvar shallowSet = /*#__PURE__*/createSetter(true);\n\nfunction createSetter() {\n  var shallow = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  return function set(target, key, value, receiver) {\n    var oldValue = target[key];\n\n    if (isReadonly(oldValue) && isRef(oldValue) && !isRef(value)) {\n      return false;\n    }\n\n    if (!shallow && !isReadonly(value)) {\n      if (!isShallow(value)) {\n        value = toRaw(value);\n        oldValue = toRaw(oldValue);\n      }\n\n      if (!isArray(target) && isRef(oldValue) && !isRef(value)) {\n        oldValue.value = value;\n        return true;\n      }\n    }\n\n    var hadKey = isArray(target) && isIntegerKey(key) ? Number(key) < target.length : hasOwn(target, key);\n    var result = Reflect.set(target, key, value, receiver); // don't trigger if target is something up in the prototype chain of original\n\n    if (target === toRaw(receiver)) {\n      if (!hadKey) {\n        trigger(target, \"add\"\n        /* ADD */\n        , key, value);\n      } else if (hasChanged(value, oldValue)) {\n        trigger(target, \"set\"\n        /* SET */\n        , key, value, oldValue);\n      }\n    }\n\n    return result;\n  };\n}\n\nfunction deleteProperty(target, key) {\n  var hadKey = hasOwn(target, key);\n  var oldValue = target[key];\n  var result = Reflect.deleteProperty(target, key);\n\n  if (result && hadKey) {\n    trigger(target, \"delete\"\n    /* DELETE */\n    , key, undefined, oldValue);\n  }\n\n  return result;\n}\n\nfunction has(target, key) {\n  var result = Reflect.has(target, key);\n\n  if (!isSymbol(key) || !builtInSymbols.has(key)) {\n    track(target, \"has\"\n    /* HAS */\n    , key);\n  }\n\n  return result;\n}\n\nfunction ownKeys(target) {\n  track(target, \"iterate\"\n  /* ITERATE */\n  , isArray(target) ? 'length' : ITERATE_KEY);\n  return Reflect.ownKeys(target);\n}\n\nvar mutableHandlers = {\n  get: get,\n  set: set,\n  deleteProperty: deleteProperty,\n  has: has,\n  ownKeys: ownKeys\n};\nvar readonlyHandlers = {\n  get: readonlyGet,\n  set: function set(target, key) {\n    if (process.env.NODE_ENV !== 'production') {\n      warn(\"Set operation on key \\\"\".concat(String(key), \"\\\" failed: target is readonly.\"), target);\n    }\n\n    return true;\n  },\n  deleteProperty: function deleteProperty(target, key) {\n    if (process.env.NODE_ENV !== 'production') {\n      warn(\"Delete operation on key \\\"\".concat(String(key), \"\\\" failed: target is readonly.\"), target);\n    }\n\n    return true;\n  }\n};\nvar shallowReactiveHandlers = /*#__PURE__*/extend({}, mutableHandlers, {\n  get: shallowGet,\n  set: shallowSet\n}); // Props handlers are special in the sense that it should not unwrap top-level\n// refs (in order to allow refs to be explicitly passed down), but should\n// retain the reactivity of the normal readonly object.\n\nvar shallowReadonlyHandlers = /*#__PURE__*/extend({}, readonlyHandlers, {\n  get: shallowReadonlyGet\n});\n\nvar toShallow = function toShallow(value) {\n  return value;\n};\n\nvar getProto = function getProto(v) {\n  return Reflect.getPrototypeOf(v);\n};\n\nfunction get$1(target, key) {\n  var isReadonly = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var isShallow = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  // #1772: readonly(reactive(Map)) should return readonly + reactive version\n  // of the value\n  target = target[\"__v_raw\"\n  /* RAW */\n  ];\n  var rawTarget = toRaw(target);\n  var rawKey = toRaw(key);\n\n  if (!isReadonly) {\n    if (key !== rawKey) {\n      track(rawTarget, \"get\"\n      /* GET */\n      , key);\n    }\n\n    track(rawTarget, \"get\"\n    /* GET */\n    , rawKey);\n  }\n\n  var _getProto = getProto(rawTarget),\n      has = _getProto.has;\n\n  var wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\n\n  if (has.call(rawTarget, key)) {\n    return wrap(target.get(key));\n  } else if (has.call(rawTarget, rawKey)) {\n    return wrap(target.get(rawKey));\n  } else if (target !== rawTarget) {\n    // #3602 readonly(reactive(Map))\n    // ensure that the nested reactive `Map` can do tracking for itself\n    target.get(key);\n  }\n}\n\nfunction has$1(key) {\n  var isReadonly = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var target = this[\"__v_raw\"\n  /* RAW */\n  ];\n  var rawTarget = toRaw(target);\n  var rawKey = toRaw(key);\n\n  if (!isReadonly) {\n    if (key !== rawKey) {\n      track(rawTarget, \"has\"\n      /* HAS */\n      , key);\n    }\n\n    track(rawTarget, \"has\"\n    /* HAS */\n    , rawKey);\n  }\n\n  return key === rawKey ? target.has(key) : target.has(key) || target.has(rawKey);\n}\n\nfunction size(target) {\n  var isReadonly = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  target = target[\"__v_raw\"\n  /* RAW */\n  ];\n  !isReadonly && track(toRaw(target), \"iterate\"\n  /* ITERATE */\n  , ITERATE_KEY);\n  return Reflect.get(target, 'size', target);\n}\n\nfunction add(value) {\n  value = toRaw(value);\n  var target = toRaw(this);\n  var proto = getProto(target);\n  var hadKey = proto.has.call(target, value);\n\n  if (!hadKey) {\n    target.add(value);\n    trigger(target, \"add\"\n    /* ADD */\n    , value, value);\n  }\n\n  return this;\n}\n\nfunction set$1(key, value) {\n  value = toRaw(value);\n  var target = toRaw(this);\n\n  var _getProto2 = getProto(target),\n      has = _getProto2.has,\n      get = _getProto2.get;\n\n  var hadKey = has.call(target, key);\n\n  if (!hadKey) {\n    key = toRaw(key);\n    hadKey = has.call(target, key);\n  } else if (process.env.NODE_ENV !== 'production') {\n    checkIdentityKeys(target, has, key);\n  }\n\n  var oldValue = get.call(target, key);\n  target.set(key, value);\n\n  if (!hadKey) {\n    trigger(target, \"add\"\n    /* ADD */\n    , key, value);\n  } else if (hasChanged(value, oldValue)) {\n    trigger(target, \"set\"\n    /* SET */\n    , key, value, oldValue);\n  }\n\n  return this;\n}\n\nfunction deleteEntry(key) {\n  var target = toRaw(this);\n\n  var _getProto3 = getProto(target),\n      has = _getProto3.has,\n      get = _getProto3.get;\n\n  var hadKey = has.call(target, key);\n\n  if (!hadKey) {\n    key = toRaw(key);\n    hadKey = has.call(target, key);\n  } else if (process.env.NODE_ENV !== 'production') {\n    checkIdentityKeys(target, has, key);\n  }\n\n  var oldValue = get ? get.call(target, key) : undefined; // forward the operation before queueing reactions\n\n  var result = target[\"delete\"](key);\n\n  if (hadKey) {\n    trigger(target, \"delete\"\n    /* DELETE */\n    , key, undefined, oldValue);\n  }\n\n  return result;\n}\n\nfunction clear() {\n  var target = toRaw(this);\n  var hadItems = target.size !== 0;\n  var oldTarget = process.env.NODE_ENV !== 'production' ? isMap(target) ? new Map(target) : new Set(target) : undefined; // forward the operation before queueing reactions\n\n  var result = target.clear();\n\n  if (hadItems) {\n    trigger(target, \"clear\"\n    /* CLEAR */\n    , undefined, undefined, oldTarget);\n  }\n\n  return result;\n}\n\nfunction createForEach(isReadonly, isShallow) {\n  return function forEach(callback, thisArg) {\n    var observed = this;\n    var target = observed[\"__v_raw\"\n    /* RAW */\n    ];\n    var rawTarget = toRaw(target);\n    var wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\n    !isReadonly && track(rawTarget, \"iterate\"\n    /* ITERATE */\n    , ITERATE_KEY);\n    return target.forEach(function (value, key) {\n      // important: make sure the callback is\n      // 1. invoked with the reactive map as `this` and 3rd arg\n      // 2. the value received should be a corresponding reactive/readonly.\n      return callback.call(thisArg, wrap(value), wrap(key), observed);\n    });\n  };\n}\n\nfunction createIterableMethod(method, isReadonly, isShallow) {\n  return function () {\n    var target = this[\"__v_raw\"\n    /* RAW */\n    ];\n    var rawTarget = toRaw(target);\n    var targetIsMap = isMap(rawTarget);\n    var isPair = method === 'entries' || method === Symbol.iterator && targetIsMap;\n    var isKeyOnly = method === 'keys' && targetIsMap;\n    var innerIterator = target[method].apply(target, arguments);\n    var wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\n    !isReadonly && track(rawTarget, \"iterate\"\n    /* ITERATE */\n    , isKeyOnly ? MAP_KEY_ITERATE_KEY : ITERATE_KEY); // return a wrapped iterator which returns observed versions of the\n    // values emitted from the real iterator\n\n    return _defineProperty({\n      // iterator protocol\n      next: function next() {\n        var _innerIterator$next = innerIterator.next(),\n            value = _innerIterator$next.value,\n            done = _innerIterator$next.done;\n\n        return done ? {\n          value: value,\n          done: done\n        } : {\n          value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),\n          done: done\n        };\n      }\n    }, Symbol.iterator, function () {\n      return this;\n    });\n  };\n}\n\nfunction createReadonlyMethod(type) {\n  return function () {\n    if (process.env.NODE_ENV !== 'production') {\n      var key = (arguments.length <= 0 ? undefined : arguments[0]) ? \"on key \\\"\".concat(arguments.length <= 0 ? undefined : arguments[0], \"\\\" \") : \"\";\n      console.warn(\"\".concat(capitalize(type), \" operation \").concat(key, \"failed: target is readonly.\"), toRaw(this));\n    }\n\n    return type === \"delete\"\n    /* DELETE */\n    ? false : this;\n  };\n}\n\nfunction createInstrumentations() {\n  var mutableInstrumentations = {\n    get: function get(key) {\n      return get$1(this, key);\n    },\n\n    get size() {\n      return size(this);\n    },\n\n    has: has$1,\n    add: add,\n    set: set$1,\n    \"delete\": deleteEntry,\n    clear: clear,\n    forEach: createForEach(false, false)\n  };\n  var shallowInstrumentations = {\n    get: function get(key) {\n      return get$1(this, key, false, true);\n    },\n\n    get size() {\n      return size(this);\n    },\n\n    has: has$1,\n    add: add,\n    set: set$1,\n    \"delete\": deleteEntry,\n    clear: clear,\n    forEach: createForEach(false, true)\n  };\n  var readonlyInstrumentations = {\n    get: function get(key) {\n      return get$1(this, key, true);\n    },\n\n    get size() {\n      return size(this, true);\n    },\n\n    has: function has(key) {\n      return has$1.call(this, key, true);\n    },\n    add: createReadonlyMethod(\"add\"\n    /* ADD */\n    ),\n    set: createReadonlyMethod(\"set\"\n    /* SET */\n    ),\n    \"delete\": createReadonlyMethod(\"delete\"\n    /* DELETE */\n    ),\n    clear: createReadonlyMethod(\"clear\"\n    /* CLEAR */\n    ),\n    forEach: createForEach(true, false)\n  };\n  var shallowReadonlyInstrumentations = {\n    get: function get(key) {\n      return get$1(this, key, true, true);\n    },\n\n    get size() {\n      return size(this, true);\n    },\n\n    has: function has(key) {\n      return has$1.call(this, key, true);\n    },\n    add: createReadonlyMethod(\"add\"\n    /* ADD */\n    ),\n    set: createReadonlyMethod(\"set\"\n    /* SET */\n    ),\n    \"delete\": createReadonlyMethod(\"delete\"\n    /* DELETE */\n    ),\n    clear: createReadonlyMethod(\"clear\"\n    /* CLEAR */\n    ),\n    forEach: createForEach(true, true)\n  };\n  var iteratorMethods = ['keys', 'values', 'entries', Symbol.iterator];\n  iteratorMethods.forEach(function (method) {\n    mutableInstrumentations[method] = createIterableMethod(method, false, false);\n    readonlyInstrumentations[method] = createIterableMethod(method, true, false);\n    shallowInstrumentations[method] = createIterableMethod(method, false, true);\n    shallowReadonlyInstrumentations[method] = createIterableMethod(method, true, true);\n  });\n  return [mutableInstrumentations, readonlyInstrumentations, shallowInstrumentations, shallowReadonlyInstrumentations];\n}\n\nvar _createInstrumentatio = /* #__PURE__*/createInstrumentations(),\n    _createInstrumentatio2 = _slicedToArray(_createInstrumentatio, 4),\n    mutableInstrumentations = _createInstrumentatio2[0],\n    readonlyInstrumentations = _createInstrumentatio2[1],\n    shallowInstrumentations = _createInstrumentatio2[2],\n    shallowReadonlyInstrumentations = _createInstrumentatio2[3];\n\nfunction createInstrumentationGetter(isReadonly, shallow) {\n  var instrumentations = shallow ? isReadonly ? shallowReadonlyInstrumentations : shallowInstrumentations : isReadonly ? readonlyInstrumentations : mutableInstrumentations;\n  return function (target, key, receiver) {\n    if (key === \"__v_isReactive\"\n    /* IS_REACTIVE */\n    ) {\n      return !isReadonly;\n    } else if (key === \"__v_isReadonly\"\n    /* IS_READONLY */\n    ) {\n      return isReadonly;\n    } else if (key === \"__v_raw\"\n    /* RAW */\n    ) {\n      return target;\n    }\n\n    return Reflect.get(hasOwn(instrumentations, key) && key in target ? instrumentations : target, key, receiver);\n  };\n}\n\nvar mutableCollectionHandlers = {\n  get: /*#__PURE__*/createInstrumentationGetter(false, false)\n};\nvar shallowCollectionHandlers = {\n  get: /*#__PURE__*/createInstrumentationGetter(false, true)\n};\nvar readonlyCollectionHandlers = {\n  get: /*#__PURE__*/createInstrumentationGetter(true, false)\n};\nvar shallowReadonlyCollectionHandlers = {\n  get: /*#__PURE__*/createInstrumentationGetter(true, true)\n};\n\nfunction checkIdentityKeys(target, has, key) {\n  var rawKey = toRaw(key);\n\n  if (rawKey !== key && has.call(target, rawKey)) {\n    var type = toRawType(target);\n    console.warn(\"Reactive \".concat(type, \" contains both the raw and reactive \") + \"versions of the same object\".concat(type === \"Map\" ? \" as keys\" : \"\", \", \") + \"which can lead to inconsistencies. \" + \"Avoid differentiating between the raw and reactive versions \" + \"of an object and only use the reactive version if possible.\");\n  }\n}\n\nvar reactiveMap = new WeakMap();\nvar shallowReactiveMap = new WeakMap();\nvar readonlyMap = new WeakMap();\nvar shallowReadonlyMap = new WeakMap();\n\nfunction targetTypeMap(rawType) {\n  switch (rawType) {\n    case 'Object':\n    case 'Array':\n      return 1\n      /* COMMON */\n      ;\n\n    case 'Map':\n    case 'Set':\n    case 'WeakMap':\n    case 'WeakSet':\n      return 2\n      /* COLLECTION */\n      ;\n\n    default:\n      return 0\n      /* INVALID */\n      ;\n  }\n}\n\nfunction getTargetType(value) {\n  return value[\"__v_skip\"\n  /* SKIP */\n  ] || !Object.isExtensible(value) ? 0\n  /* INVALID */\n  : targetTypeMap(toRawType(value));\n}\n\nfunction reactive(target) {\n  // if trying to observe a readonly proxy, return the readonly version.\n  if (isReadonly(target)) {\n    return target;\n  }\n\n  return createReactiveObject(target, false, mutableHandlers, mutableCollectionHandlers, reactiveMap);\n}\n/**\r\n * Return a shallowly-reactive copy of the original object, where only the root\r\n * level properties are reactive. It also does not auto-unwrap refs (even at the\r\n * root level).\r\n */\n\n\nfunction shallowReactive(target) {\n  return createReactiveObject(target, false, shallowReactiveHandlers, shallowCollectionHandlers, shallowReactiveMap);\n}\n/**\r\n * Creates a readonly copy of the original object. Note the returned copy is not\r\n * made reactive, but `readonly` can be called on an already reactive object.\r\n */\n\n\nfunction readonly(target) {\n  return createReactiveObject(target, true, readonlyHandlers, readonlyCollectionHandlers, readonlyMap);\n}\n/**\r\n * Returns a reactive-copy of the original object, where only the root level\r\n * properties are readonly, and does NOT unwrap refs nor recursively convert\r\n * returned properties.\r\n * This is used for creating the props proxy object for stateful components.\r\n */\n\n\nfunction shallowReadonly(target) {\n  return createReactiveObject(target, true, shallowReadonlyHandlers, shallowReadonlyCollectionHandlers, shallowReadonlyMap);\n}\n\nfunction createReactiveObject(target, isReadonly, baseHandlers, collectionHandlers, proxyMap) {\n  if (!isObject(target)) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.warn(\"value cannot be made reactive: \".concat(String(target)));\n    }\n\n    return target;\n  } // target is already a Proxy, return it.\n  // exception: calling readonly() on a reactive object\n\n\n  if (target[\"__v_raw\"\n  /* RAW */\n  ] && !(isReadonly && target[\"__v_isReactive\"\n  /* IS_REACTIVE */\n  ])) {\n    return target;\n  } // target already has corresponding Proxy\n\n\n  var existingProxy = proxyMap.get(target);\n\n  if (existingProxy) {\n    return existingProxy;\n  } // only specific value types can be observed.\n\n\n  var targetType = getTargetType(target);\n\n  if (targetType === 0\n  /* INVALID */\n  ) {\n    return target;\n  }\n\n  var proxy = new Proxy(target, targetType === 2\n  /* COLLECTION */\n  ? collectionHandlers : baseHandlers);\n  proxyMap.set(target, proxy);\n  return proxy;\n}\n\nfunction isReactive(value) {\n  if (isReadonly(value)) {\n    return isReactive(value[\"__v_raw\"\n    /* RAW */\n    ]);\n  }\n\n  return !!(value && value[\"__v_isReactive\"\n  /* IS_REACTIVE */\n  ]);\n}\n\nfunction isReadonly(value) {\n  return !!(value && value[\"__v_isReadonly\"\n  /* IS_READONLY */\n  ]);\n}\n\nfunction isShallow(value) {\n  return !!(value && value[\"__v_isShallow\"\n  /* IS_SHALLOW */\n  ]);\n}\n\nfunction isProxy(value) {\n  return isReactive(value) || isReadonly(value);\n}\n\nfunction toRaw(observed) {\n  var raw = observed && observed[\"__v_raw\"\n  /* RAW */\n  ];\n  return raw ? toRaw(raw) : observed;\n}\n\nfunction markRaw(value) {\n  def(value, \"__v_skip\"\n  /* SKIP */\n  , true);\n  return value;\n}\n\nvar toReactive = function toReactive(value) {\n  return isObject(value) ? reactive(value) : value;\n};\n\nvar toReadonly = function toReadonly(value) {\n  return isObject(value) ? readonly(value) : value;\n};\n\nfunction trackRefValue(ref) {\n  if (shouldTrack && activeEffect) {\n    ref = toRaw(ref);\n\n    if (process.env.NODE_ENV !== 'production') {\n      trackEffects(ref.dep || (ref.dep = createDep()), {\n        target: ref,\n        type: \"get\"\n        /* GET */\n        ,\n        key: 'value'\n      });\n    } else {\n      trackEffects(ref.dep || (ref.dep = createDep()));\n    }\n  }\n}\n\nfunction triggerRefValue(ref, newVal) {\n  ref = toRaw(ref);\n\n  if (ref.dep) {\n    if (process.env.NODE_ENV !== 'production') {\n      triggerEffects(ref.dep, {\n        target: ref,\n        type: \"set\"\n        /* SET */\n        ,\n        key: 'value',\n        newValue: newVal\n      });\n    } else {\n      triggerEffects(ref.dep);\n    }\n  }\n}\n\nfunction isRef(r) {\n  return !!(r && r.__v_isRef === true);\n}\n\nfunction ref(value) {\n  return createRef(value, false);\n}\n\nfunction shallowRef(value) {\n  return createRef(value, true);\n}\n\nfunction createRef(rawValue, shallow) {\n  if (isRef(rawValue)) {\n    return rawValue;\n  }\n\n  return new RefImpl(rawValue, shallow);\n}\n\nvar RefImpl = /*#__PURE__*/function () {\n  function RefImpl(value, __v_isShallow) {\n    _classCallCheck(this, RefImpl);\n\n    this.__v_isShallow = __v_isShallow;\n    this.dep = undefined;\n    this.__v_isRef = true;\n    this._rawValue = __v_isShallow ? value : toRaw(value);\n    this._value = __v_isShallow ? value : toReactive(value);\n  }\n\n  _createClass(RefImpl, [{\n    key: \"value\",\n    get: function get() {\n      trackRefValue(this);\n      return this._value;\n    },\n    set: function set(newVal) {\n      newVal = this.__v_isShallow ? newVal : toRaw(newVal);\n\n      if (hasChanged(newVal, this._rawValue)) {\n        this._rawValue = newVal;\n        this._value = this.__v_isShallow ? newVal : toReactive(newVal);\n        triggerRefValue(this, newVal);\n      }\n    }\n  }]);\n\n  return RefImpl;\n}();\n\nfunction triggerRef(ref) {\n  triggerRefValue(ref, process.env.NODE_ENV !== 'production' ? ref.value : void 0);\n}\n\nfunction unref(ref) {\n  return isRef(ref) ? ref.value : ref;\n}\n\nvar shallowUnwrapHandlers = {\n  get: function get(target, key, receiver) {\n    return unref(Reflect.get(target, key, receiver));\n  },\n  set: function set(target, key, value, receiver) {\n    var oldValue = target[key];\n\n    if (isRef(oldValue) && !isRef(value)) {\n      oldValue.value = value;\n      return true;\n    } else {\n      return Reflect.set(target, key, value, receiver);\n    }\n  }\n};\n\nfunction proxyRefs(objectWithRefs) {\n  return isReactive(objectWithRefs) ? objectWithRefs : new Proxy(objectWithRefs, shallowUnwrapHandlers);\n}\n\nvar CustomRefImpl = /*#__PURE__*/function () {\n  function CustomRefImpl(factory) {\n    var _this = this;\n\n    _classCallCheck(this, CustomRefImpl);\n\n    this.dep = undefined;\n    this.__v_isRef = true;\n\n    var _factory = factory(function () {\n      return trackRefValue(_this);\n    }, function () {\n      return triggerRefValue(_this);\n    }),\n        get = _factory.get,\n        set = _factory.set;\n\n    this._get = get;\n    this._set = set;\n  }\n\n  _createClass(CustomRefImpl, [{\n    key: \"value\",\n    get: function get() {\n      return this._get();\n    },\n    set: function set(newVal) {\n      this._set(newVal);\n    }\n  }]);\n\n  return CustomRefImpl;\n}();\n\nfunction customRef(factory) {\n  return new CustomRefImpl(factory);\n}\n\nfunction toRefs(object) {\n  if (process.env.NODE_ENV !== 'production' && !isProxy(object)) {\n    console.warn(\"toRefs() expects a reactive object but received a plain one.\");\n  }\n\n  var ret = isArray(object) ? new Array(object.length) : {};\n\n  for (var key in object) {\n    ret[key] = toRef(object, key);\n  }\n\n  return ret;\n}\n\nvar ObjectRefImpl = /*#__PURE__*/function () {\n  function ObjectRefImpl(_object, _key, _defaultValue) {\n    _classCallCheck(this, ObjectRefImpl);\n\n    this._object = _object;\n    this._key = _key;\n    this._defaultValue = _defaultValue;\n    this.__v_isRef = true;\n  }\n\n  _createClass(ObjectRefImpl, [{\n    key: \"value\",\n    get: function get() {\n      var val = this._object[this._key];\n      return val === undefined ? this._defaultValue : val;\n    },\n    set: function set(newVal) {\n      this._object[this._key] = newVal;\n    }\n  }]);\n\n  return ObjectRefImpl;\n}();\n\nfunction toRef(object, key, defaultValue) {\n  var val = object[key];\n  return isRef(val) ? val : new ObjectRefImpl(object, key, defaultValue);\n}\n\nvar ComputedRefImpl = /*#__PURE__*/function () {\n  function ComputedRefImpl(getter, _setter, isReadonly, isSSR) {\n    var _this2 = this;\n\n    _classCallCheck(this, ComputedRefImpl);\n\n    this._setter = _setter;\n    this.dep = undefined;\n    this.__v_isRef = true;\n    this._dirty = true;\n    this.effect = new ReactiveEffect(getter, function () {\n      if (!_this2._dirty) {\n        _this2._dirty = true;\n        triggerRefValue(_this2);\n      }\n    });\n    this.effect.computed = this;\n    this.effect.active = this._cacheable = !isSSR;\n    this[\"__v_isReadonly\"\n    /* IS_READONLY */\n    ] = isReadonly;\n  }\n\n  _createClass(ComputedRefImpl, [{\n    key: \"value\",\n    get: function get() {\n      // the computed ref may get wrapped by other proxies e.g. readonly() #3376\n      var self = toRaw(this);\n      trackRefValue(self);\n\n      if (self._dirty || !self._cacheable) {\n        self._dirty = false;\n        self._value = self.effect.run();\n      }\n\n      return self._value;\n    },\n    set: function set(newValue) {\n      this._setter(newValue);\n    }\n  }]);\n\n  return ComputedRefImpl;\n}();\n\nfunction computed(getterOrOptions, debugOptions) {\n  var isSSR = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var getter;\n  var setter;\n  var onlyGetter = isFunction(getterOrOptions);\n\n  if (onlyGetter) {\n    getter = getterOrOptions;\n    setter = process.env.NODE_ENV !== 'production' ? function () {\n      console.warn('Write operation failed: computed value is readonly');\n    } : NOOP;\n  } else {\n    getter = getterOrOptions.get;\n    setter = getterOrOptions.set;\n  }\n\n  var cRef = new ComputedRefImpl(getter, setter, onlyGetter || !setter, isSSR);\n\n  if (process.env.NODE_ENV !== 'production' && debugOptions && !isSSR) {\n    cRef.effect.onTrack = debugOptions.onTrack;\n    cRef.effect.onTrigger = debugOptions.onTrigger;\n  }\n\n  return cRef;\n}\n\nvar _a;\n\nvar tick = /*#__PURE__*/Promise.resolve();\nvar queue = [];\nvar queued = false;\n\nvar scheduler = function scheduler(fn) {\n  queue.push(fn);\n\n  if (!queued) {\n    queued = true;\n    tick.then(flush);\n  }\n};\n\nvar flush = function flush() {\n  for (var i = 0; i < queue.length; i++) {\n    queue[i]();\n  }\n\n  queue.length = 0;\n  queued = false;\n};\n\nvar DeferredComputedRefImpl = /*#__PURE__*/function () {\n  function DeferredComputedRefImpl(getter) {\n    var _this3 = this;\n\n    _classCallCheck(this, DeferredComputedRefImpl);\n\n    this.dep = undefined;\n    this._dirty = true;\n    this.__v_isRef = true;\n    this[_a] = true;\n    var compareTarget;\n    var hasCompareTarget = false;\n    var scheduled = false;\n    this.effect = new ReactiveEffect(getter, function (computedTrigger) {\n      if (_this3.dep) {\n        if (computedTrigger) {\n          compareTarget = _this3._value;\n          hasCompareTarget = true;\n        } else if (!scheduled) {\n          var valueToCompare = hasCompareTarget ? compareTarget : _this3._value;\n          scheduled = true;\n          hasCompareTarget = false;\n          scheduler(function () {\n            if (_this3.effect.active && _this3._get() !== valueToCompare) {\n              triggerRefValue(_this3);\n            }\n\n            scheduled = false;\n          });\n        } // chained upstream computeds are notified synchronously to ensure\n        // value invalidation in case of sync access; normal effects are\n        // deferred to be triggered in scheduler.\n\n\n        var _iterator4 = _createForOfIteratorHelper(_this3.dep),\n            _step4;\n\n        try {\n          for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n            var e = _step4.value;\n\n            if (e.computed instanceof DeferredComputedRefImpl) {\n              e.scheduler(true\n              /* computedTrigger */\n              );\n            }\n          }\n        } catch (err) {\n          _iterator4.e(err);\n        } finally {\n          _iterator4.f();\n        }\n      }\n\n      _this3._dirty = true;\n    });\n    this.effect.computed = this;\n  }\n\n  _createClass(DeferredComputedRefImpl, [{\n    key: \"_get\",\n    value: function _get() {\n      if (this._dirty) {\n        this._dirty = false;\n        return this._value = this.effect.run();\n      }\n\n      return this._value;\n    }\n  }, {\n    key: \"value\",\n    get: function get() {\n      trackRefValue(this); // the computed ref may get wrapped by other proxies e.g. readonly() #3376\n\n      return toRaw(this)._get();\n    }\n  }]);\n\n  return DeferredComputedRefImpl;\n}();\n\n_a = \"__v_isReadonly\"\n/* IS_READONLY */\n;\n\nfunction deferredComputed(getter) {\n  return new DeferredComputedRefImpl(getter);\n}\n\nexport { EffectScope, ITERATE_KEY, ReactiveEffect, computed, customRef, deferredComputed, effect, effectScope, enableTracking, getCurrentScope, isProxy, isReactive, isReadonly, isRef, isShallow, markRaw, onScopeDispose, pauseTracking, proxyRefs, reactive, readonly, ref, resetTracking, shallowReactive, shallowReadonly, shallowRef, stop, toRaw, toRef, toRefs, track, trigger, triggerRef, unref };","map":{"version":3,"names":["extend","isArray","isMap","isIntegerKey","hasOwn","isSymbol","isObject","hasChanged","makeMap","capitalize","toRawType","def","isFunction","NOOP","warn","msg","args","console","activeEffectScope","EffectScope","detached","active","effects","cleanups","parent","index","scopes","push","fn","currentEffectScope","process","env","NODE_ENV","fromParent","i","l","length","stop","last","pop","effectScope","recordEffectScope","effect","scope","getCurrentScope","onScopeDispose","createDep","dep","Set","w","n","wasTracked","trackOpBit","newTracked","initDepMarkers","deps","finalizeDepMarkers","ptr","targetMap","WeakMap","effectTrackDepth","maxMarkerBits","activeEffect","ITERATE_KEY","Symbol","MAP_KEY_ITERATE_KEY","ReactiveEffect","scheduler","undefined","lastShouldTrack","shouldTrack","cleanupEffect","deferStop","onStop","options","_effect","lazy","run","runner","bind","trackStack","pauseTracking","enableTracking","resetTracking","track","target","type","key","depsMap","get","set","Map","eventInfo","trackEffects","debuggerEventExtraInfo","has","add","onTrack","Object","assign","trigger","newValue","oldValue","oldTarget","values","forEach","triggerEffects","computed","triggerEffect","allowRecurse","onTrigger","isNonTrackableKeys","builtInSymbols","getOwnPropertyNames","filter","map","createGetter","shallowGet","readonlyGet","shallowReadonlyGet","arrayInstrumentations","createArrayInstrumentations","instrumentations","arr","toRaw","res","apply","isReadonly","shallow","receiver","shallowReadonlyMap","readonlyMap","shallowReactiveMap","reactiveMap","targetIsArray","Reflect","isRef","value","readonly","reactive","createSetter","shallowSet","isShallow","hadKey","Number","result","deleteProperty","ownKeys","mutableHandlers","readonlyHandlers","String","shallowReactiveHandlers","shallowReadonlyHandlers","toShallow","getProto","v","getPrototypeOf","get$1","rawTarget","rawKey","wrap","toReadonly","toReactive","call","has$1","size","proto","set$1","checkIdentityKeys","deleteEntry","clear","hadItems","createForEach","callback","thisArg","observed","createIterableMethod","method","targetIsMap","isPair","iterator","isKeyOnly","innerIterator","next","done","createReadonlyMethod","createInstrumentations","mutableInstrumentations","shallowInstrumentations","readonlyInstrumentations","shallowReadonlyInstrumentations","iteratorMethods","createInstrumentationGetter","mutableCollectionHandlers","shallowCollectionHandlers","readonlyCollectionHandlers","shallowReadonlyCollectionHandlers","targetTypeMap","rawType","getTargetType","isExtensible","createReactiveObject","shallowReactive","shallowReadonly","baseHandlers","collectionHandlers","proxyMap","existingProxy","targetType","proxy","Proxy","isReactive","isProxy","raw","markRaw","trackRefValue","ref","triggerRefValue","newVal","r","__v_isRef","createRef","shallowRef","rawValue","RefImpl","__v_isShallow","_rawValue","_value","triggerRef","unref","shallowUnwrapHandlers","proxyRefs","objectWithRefs","CustomRefImpl","factory","_get","_set","customRef","toRefs","object","ret","Array","toRef","ObjectRefImpl","_object","_key","_defaultValue","val","defaultValue","ComputedRefImpl","getter","_setter","isSSR","_dirty","_cacheable","self","getterOrOptions","debugOptions","setter","onlyGetter","cRef","_a","tick","Promise","resolve","queue","queued","then","flush","DeferredComputedRefImpl","compareTarget","hasCompareTarget","scheduled","computedTrigger","valueToCompare","e","deferredComputed"],"sources":["/home/dead/trabalho_web/SCC0219_Trabalho_Web/node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js"],"sourcesContent":["import { extend, isArray, isMap, isIntegerKey, hasOwn, isSymbol, isObject, hasChanged, makeMap, capitalize, toRawType, def, isFunction, NOOP } from '@vue/shared';\n\nfunction warn(msg, ...args) {\r\n    console.warn(`[Vue warn] ${msg}`, ...args);\r\n}\n\nlet activeEffectScope;\r\nclass EffectScope {\r\n    constructor(detached = false) {\r\n        /**\r\n         * @internal\r\n         */\r\n        this.active = true;\r\n        /**\r\n         * @internal\r\n         */\r\n        this.effects = [];\r\n        /**\r\n         * @internal\r\n         */\r\n        this.cleanups = [];\r\n        if (!detached && activeEffectScope) {\r\n            this.parent = activeEffectScope;\r\n            this.index =\r\n                (activeEffectScope.scopes || (activeEffectScope.scopes = [])).push(this) - 1;\r\n        }\r\n    }\r\n    run(fn) {\r\n        if (this.active) {\r\n            const currentEffectScope = activeEffectScope;\r\n            try {\r\n                activeEffectScope = this;\r\n                return fn();\r\n            }\r\n            finally {\r\n                activeEffectScope = currentEffectScope;\r\n            }\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`cannot run an inactive effect scope.`);\r\n        }\r\n    }\r\n    /**\r\n     * This should only be called on non-detached scopes\r\n     * @internal\r\n     */\r\n    on() {\r\n        activeEffectScope = this;\r\n    }\r\n    /**\r\n     * This should only be called on non-detached scopes\r\n     * @internal\r\n     */\r\n    off() {\r\n        activeEffectScope = this.parent;\r\n    }\r\n    stop(fromParent) {\r\n        if (this.active) {\r\n            let i, l;\r\n            for (i = 0, l = this.effects.length; i < l; i++) {\r\n                this.effects[i].stop();\r\n            }\r\n            for (i = 0, l = this.cleanups.length; i < l; i++) {\r\n                this.cleanups[i]();\r\n            }\r\n            if (this.scopes) {\r\n                for (i = 0, l = this.scopes.length; i < l; i++) {\r\n                    this.scopes[i].stop(true);\r\n                }\r\n            }\r\n            // nested scope, dereference from parent to avoid memory leaks\r\n            if (this.parent && !fromParent) {\r\n                // optimized O(1) removal\r\n                const last = this.parent.scopes.pop();\r\n                if (last && last !== this) {\r\n                    this.parent.scopes[this.index] = last;\r\n                    last.index = this.index;\r\n                }\r\n            }\r\n            this.active = false;\r\n        }\r\n    }\r\n}\r\nfunction effectScope(detached) {\r\n    return new EffectScope(detached);\r\n}\r\nfunction recordEffectScope(effect, scope = activeEffectScope) {\r\n    if (scope && scope.active) {\r\n        scope.effects.push(effect);\r\n    }\r\n}\r\nfunction getCurrentScope() {\r\n    return activeEffectScope;\r\n}\r\nfunction onScopeDispose(fn) {\r\n    if (activeEffectScope) {\r\n        activeEffectScope.cleanups.push(fn);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`onScopeDispose() is called when there is no active effect scope` +\r\n            ` to be associated with.`);\r\n    }\r\n}\n\nconst createDep = (effects) => {\r\n    const dep = new Set(effects);\r\n    dep.w = 0;\r\n    dep.n = 0;\r\n    return dep;\r\n};\r\nconst wasTracked = (dep) => (dep.w & trackOpBit) > 0;\r\nconst newTracked = (dep) => (dep.n & trackOpBit) > 0;\r\nconst initDepMarkers = ({ deps }) => {\r\n    if (deps.length) {\r\n        for (let i = 0; i < deps.length; i++) {\r\n            deps[i].w |= trackOpBit; // set was tracked\r\n        }\r\n    }\r\n};\r\nconst finalizeDepMarkers = (effect) => {\r\n    const { deps } = effect;\r\n    if (deps.length) {\r\n        let ptr = 0;\r\n        for (let i = 0; i < deps.length; i++) {\r\n            const dep = deps[i];\r\n            if (wasTracked(dep) && !newTracked(dep)) {\r\n                dep.delete(effect);\r\n            }\r\n            else {\r\n                deps[ptr++] = dep;\r\n            }\r\n            // clear bits\r\n            dep.w &= ~trackOpBit;\r\n            dep.n &= ~trackOpBit;\r\n        }\r\n        deps.length = ptr;\r\n    }\r\n};\n\nconst targetMap = new WeakMap();\r\n// The number of effects currently being tracked recursively.\r\nlet effectTrackDepth = 0;\r\nlet trackOpBit = 1;\r\n/**\r\n * The bitwise track markers support at most 30 levels of recursion.\r\n * This value is chosen to enable modern JS engines to use a SMI on all platforms.\r\n * When recursion depth is greater, fall back to using a full cleanup.\r\n */\r\nconst maxMarkerBits = 30;\r\nlet activeEffect;\r\nconst ITERATE_KEY = Symbol((process.env.NODE_ENV !== 'production') ? 'iterate' : '');\r\nconst MAP_KEY_ITERATE_KEY = Symbol((process.env.NODE_ENV !== 'production') ? 'Map key iterate' : '');\r\nclass ReactiveEffect {\r\n    constructor(fn, scheduler = null, scope) {\r\n        this.fn = fn;\r\n        this.scheduler = scheduler;\r\n        this.active = true;\r\n        this.deps = [];\r\n        this.parent = undefined;\r\n        recordEffectScope(this, scope);\r\n    }\r\n    run() {\r\n        if (!this.active) {\r\n            return this.fn();\r\n        }\r\n        let parent = activeEffect;\r\n        let lastShouldTrack = shouldTrack;\r\n        while (parent) {\r\n            if (parent === this) {\r\n                return;\r\n            }\r\n            parent = parent.parent;\r\n        }\r\n        try {\r\n            this.parent = activeEffect;\r\n            activeEffect = this;\r\n            shouldTrack = true;\r\n            trackOpBit = 1 << ++effectTrackDepth;\r\n            if (effectTrackDepth <= maxMarkerBits) {\r\n                initDepMarkers(this);\r\n            }\r\n            else {\r\n                cleanupEffect(this);\r\n            }\r\n            return this.fn();\r\n        }\r\n        finally {\r\n            if (effectTrackDepth <= maxMarkerBits) {\r\n                finalizeDepMarkers(this);\r\n            }\r\n            trackOpBit = 1 << --effectTrackDepth;\r\n            activeEffect = this.parent;\r\n            shouldTrack = lastShouldTrack;\r\n            this.parent = undefined;\r\n            if (this.deferStop) {\r\n                this.stop();\r\n            }\r\n        }\r\n    }\r\n    stop() {\r\n        // stopped while running itself - defer the cleanup\r\n        if (activeEffect === this) {\r\n            this.deferStop = true;\r\n        }\r\n        else if (this.active) {\r\n            cleanupEffect(this);\r\n            if (this.onStop) {\r\n                this.onStop();\r\n            }\r\n            this.active = false;\r\n        }\r\n    }\r\n}\r\nfunction cleanupEffect(effect) {\r\n    const { deps } = effect;\r\n    if (deps.length) {\r\n        for (let i = 0; i < deps.length; i++) {\r\n            deps[i].delete(effect);\r\n        }\r\n        deps.length = 0;\r\n    }\r\n}\r\nfunction effect(fn, options) {\r\n    if (fn.effect) {\r\n        fn = fn.effect.fn;\r\n    }\r\n    const _effect = new ReactiveEffect(fn);\r\n    if (options) {\r\n        extend(_effect, options);\r\n        if (options.scope)\r\n            recordEffectScope(_effect, options.scope);\r\n    }\r\n    if (!options || !options.lazy) {\r\n        _effect.run();\r\n    }\r\n    const runner = _effect.run.bind(_effect);\r\n    runner.effect = _effect;\r\n    return runner;\r\n}\r\nfunction stop(runner) {\r\n    runner.effect.stop();\r\n}\r\nlet shouldTrack = true;\r\nconst trackStack = [];\r\nfunction pauseTracking() {\r\n    trackStack.push(shouldTrack);\r\n    shouldTrack = false;\r\n}\r\nfunction enableTracking() {\r\n    trackStack.push(shouldTrack);\r\n    shouldTrack = true;\r\n}\r\nfunction resetTracking() {\r\n    const last = trackStack.pop();\r\n    shouldTrack = last === undefined ? true : last;\r\n}\r\nfunction track(target, type, key) {\r\n    if (shouldTrack && activeEffect) {\r\n        let depsMap = targetMap.get(target);\r\n        if (!depsMap) {\r\n            targetMap.set(target, (depsMap = new Map()));\r\n        }\r\n        let dep = depsMap.get(key);\r\n        if (!dep) {\r\n            depsMap.set(key, (dep = createDep()));\r\n        }\r\n        const eventInfo = (process.env.NODE_ENV !== 'production')\r\n            ? { effect: activeEffect, target, type, key }\r\n            : undefined;\r\n        trackEffects(dep, eventInfo);\r\n    }\r\n}\r\nfunction trackEffects(dep, debuggerEventExtraInfo) {\r\n    let shouldTrack = false;\r\n    if (effectTrackDepth <= maxMarkerBits) {\r\n        if (!newTracked(dep)) {\r\n            dep.n |= trackOpBit; // set newly tracked\r\n            shouldTrack = !wasTracked(dep);\r\n        }\r\n    }\r\n    else {\r\n        // Full cleanup mode.\r\n        shouldTrack = !dep.has(activeEffect);\r\n    }\r\n    if (shouldTrack) {\r\n        dep.add(activeEffect);\r\n        activeEffect.deps.push(dep);\r\n        if ((process.env.NODE_ENV !== 'production') && activeEffect.onTrack) {\r\n            activeEffect.onTrack(Object.assign({ effect: activeEffect }, debuggerEventExtraInfo));\r\n        }\r\n    }\r\n}\r\nfunction trigger(target, type, key, newValue, oldValue, oldTarget) {\r\n    const depsMap = targetMap.get(target);\r\n    if (!depsMap) {\r\n        // never been tracked\r\n        return;\r\n    }\r\n    let deps = [];\r\n    if (type === \"clear\" /* CLEAR */) {\r\n        // collection being cleared\r\n        // trigger all effects for target\r\n        deps = [...depsMap.values()];\r\n    }\r\n    else if (key === 'length' && isArray(target)) {\r\n        depsMap.forEach((dep, key) => {\r\n            if (key === 'length' || key >= newValue) {\r\n                deps.push(dep);\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        // schedule runs for SET | ADD | DELETE\r\n        if (key !== void 0) {\r\n            deps.push(depsMap.get(key));\r\n        }\r\n        // also run for iteration key on ADD | DELETE | Map.SET\r\n        switch (type) {\r\n            case \"add\" /* ADD */:\r\n                if (!isArray(target)) {\r\n                    deps.push(depsMap.get(ITERATE_KEY));\r\n                    if (isMap(target)) {\r\n                        deps.push(depsMap.get(MAP_KEY_ITERATE_KEY));\r\n                    }\r\n                }\r\n                else if (isIntegerKey(key)) {\r\n                    // new index added to array -> length changes\r\n                    deps.push(depsMap.get('length'));\r\n                }\r\n                break;\r\n            case \"delete\" /* DELETE */:\r\n                if (!isArray(target)) {\r\n                    deps.push(depsMap.get(ITERATE_KEY));\r\n                    if (isMap(target)) {\r\n                        deps.push(depsMap.get(MAP_KEY_ITERATE_KEY));\r\n                    }\r\n                }\r\n                break;\r\n            case \"set\" /* SET */:\r\n                if (isMap(target)) {\r\n                    deps.push(depsMap.get(ITERATE_KEY));\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    const eventInfo = (process.env.NODE_ENV !== 'production')\r\n        ? { target, type, key, newValue, oldValue, oldTarget }\r\n        : undefined;\r\n    if (deps.length === 1) {\r\n        if (deps[0]) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                triggerEffects(deps[0], eventInfo);\r\n            }\r\n            else {\r\n                triggerEffects(deps[0]);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        const effects = [];\r\n        for (const dep of deps) {\r\n            if (dep) {\r\n                effects.push(...dep);\r\n            }\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            triggerEffects(createDep(effects), eventInfo);\r\n        }\r\n        else {\r\n            triggerEffects(createDep(effects));\r\n        }\r\n    }\r\n}\r\nfunction triggerEffects(dep, debuggerEventExtraInfo) {\r\n    // spread into array for stabilization\r\n    const effects = isArray(dep) ? dep : [...dep];\r\n    for (const effect of effects) {\r\n        if (effect.computed) {\r\n            triggerEffect(effect, debuggerEventExtraInfo);\r\n        }\r\n    }\r\n    for (const effect of effects) {\r\n        if (!effect.computed) {\r\n            triggerEffect(effect, debuggerEventExtraInfo);\r\n        }\r\n    }\r\n}\r\nfunction triggerEffect(effect, debuggerEventExtraInfo) {\r\n    if (effect !== activeEffect || effect.allowRecurse) {\r\n        if ((process.env.NODE_ENV !== 'production') && effect.onTrigger) {\r\n            effect.onTrigger(extend({ effect }, debuggerEventExtraInfo));\r\n        }\r\n        if (effect.scheduler) {\r\n            effect.scheduler();\r\n        }\r\n        else {\r\n            effect.run();\r\n        }\r\n    }\r\n}\n\nconst isNonTrackableKeys = /*#__PURE__*/ makeMap(`__proto__,__v_isRef,__isVue`);\r\nconst builtInSymbols = new Set(\r\n/*#__PURE__*/\r\nObject.getOwnPropertyNames(Symbol)\r\n    // ios10.x Object.getOwnPropertyNames(Symbol) can enumerate 'arguments' and 'caller'\r\n    // but accessing them on Symbol leads to TypeError because Symbol is a strict mode\r\n    // function\r\n    .filter(key => key !== 'arguments' && key !== 'caller')\r\n    .map(key => Symbol[key])\r\n    .filter(isSymbol));\r\nconst get = /*#__PURE__*/ createGetter();\r\nconst shallowGet = /*#__PURE__*/ createGetter(false, true);\r\nconst readonlyGet = /*#__PURE__*/ createGetter(true);\r\nconst shallowReadonlyGet = /*#__PURE__*/ createGetter(true, true);\r\nconst arrayInstrumentations = /*#__PURE__*/ createArrayInstrumentations();\r\nfunction createArrayInstrumentations() {\r\n    const instrumentations = {};\r\n    ['includes', 'indexOf', 'lastIndexOf'].forEach(key => {\r\n        instrumentations[key] = function (...args) {\r\n            const arr = toRaw(this);\r\n            for (let i = 0, l = this.length; i < l; i++) {\r\n                track(arr, \"get\" /* GET */, i + '');\r\n            }\r\n            // we run the method using the original args first (which may be reactive)\r\n            const res = arr[key](...args);\r\n            if (res === -1 || res === false) {\r\n                // if that didn't work, run it again using raw values.\r\n                return arr[key](...args.map(toRaw));\r\n            }\r\n            else {\r\n                return res;\r\n            }\r\n        };\r\n    });\r\n    ['push', 'pop', 'shift', 'unshift', 'splice'].forEach(key => {\r\n        instrumentations[key] = function (...args) {\r\n            pauseTracking();\r\n            const res = toRaw(this)[key].apply(this, args);\r\n            resetTracking();\r\n            return res;\r\n        };\r\n    });\r\n    return instrumentations;\r\n}\r\nfunction createGetter(isReadonly = false, shallow = false) {\r\n    return function get(target, key, receiver) {\r\n        if (key === \"__v_isReactive\" /* IS_REACTIVE */) {\r\n            return !isReadonly;\r\n        }\r\n        else if (key === \"__v_isReadonly\" /* IS_READONLY */) {\r\n            return isReadonly;\r\n        }\r\n        else if (key === \"__v_isShallow\" /* IS_SHALLOW */) {\r\n            return shallow;\r\n        }\r\n        else if (key === \"__v_raw\" /* RAW */ &&\r\n            receiver ===\r\n                (isReadonly\r\n                    ? shallow\r\n                        ? shallowReadonlyMap\r\n                        : readonlyMap\r\n                    : shallow\r\n                        ? shallowReactiveMap\r\n                        : reactiveMap).get(target)) {\r\n            return target;\r\n        }\r\n        const targetIsArray = isArray(target);\r\n        if (!isReadonly && targetIsArray && hasOwn(arrayInstrumentations, key)) {\r\n            return Reflect.get(arrayInstrumentations, key, receiver);\r\n        }\r\n        const res = Reflect.get(target, key, receiver);\r\n        if (isSymbol(key) ? builtInSymbols.has(key) : isNonTrackableKeys(key)) {\r\n            return res;\r\n        }\r\n        if (!isReadonly) {\r\n            track(target, \"get\" /* GET */, key);\r\n        }\r\n        if (shallow) {\r\n            return res;\r\n        }\r\n        if (isRef(res)) {\r\n            // ref unwrapping - skip unwrap for Array + integer key.\r\n            return targetIsArray && isIntegerKey(key) ? res : res.value;\r\n        }\r\n        if (isObject(res)) {\r\n            // Convert returned value into a proxy as well. we do the isObject check\r\n            // here to avoid invalid value warning. Also need to lazy access readonly\r\n            // and reactive here to avoid circular dependency.\r\n            return isReadonly ? readonly(res) : reactive(res);\r\n        }\r\n        return res;\r\n    };\r\n}\r\nconst set = /*#__PURE__*/ createSetter();\r\nconst shallowSet = /*#__PURE__*/ createSetter(true);\r\nfunction createSetter(shallow = false) {\r\n    return function set(target, key, value, receiver) {\r\n        let oldValue = target[key];\r\n        if (isReadonly(oldValue) && isRef(oldValue) && !isRef(value)) {\r\n            return false;\r\n        }\r\n        if (!shallow && !isReadonly(value)) {\r\n            if (!isShallow(value)) {\r\n                value = toRaw(value);\r\n                oldValue = toRaw(oldValue);\r\n            }\r\n            if (!isArray(target) && isRef(oldValue) && !isRef(value)) {\r\n                oldValue.value = value;\r\n                return true;\r\n            }\r\n        }\r\n        const hadKey = isArray(target) && isIntegerKey(key)\r\n            ? Number(key) < target.length\r\n            : hasOwn(target, key);\r\n        const result = Reflect.set(target, key, value, receiver);\r\n        // don't trigger if target is something up in the prototype chain of original\r\n        if (target === toRaw(receiver)) {\r\n            if (!hadKey) {\r\n                trigger(target, \"add\" /* ADD */, key, value);\r\n            }\r\n            else if (hasChanged(value, oldValue)) {\r\n                trigger(target, \"set\" /* SET */, key, value, oldValue);\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n}\r\nfunction deleteProperty(target, key) {\r\n    const hadKey = hasOwn(target, key);\r\n    const oldValue = target[key];\r\n    const result = Reflect.deleteProperty(target, key);\r\n    if (result && hadKey) {\r\n        trigger(target, \"delete\" /* DELETE */, key, undefined, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction has(target, key) {\r\n    const result = Reflect.has(target, key);\r\n    if (!isSymbol(key) || !builtInSymbols.has(key)) {\r\n        track(target, \"has\" /* HAS */, key);\r\n    }\r\n    return result;\r\n}\r\nfunction ownKeys(target) {\r\n    track(target, \"iterate\" /* ITERATE */, isArray(target) ? 'length' : ITERATE_KEY);\r\n    return Reflect.ownKeys(target);\r\n}\r\nconst mutableHandlers = {\r\n    get,\r\n    set,\r\n    deleteProperty,\r\n    has,\r\n    ownKeys\r\n};\r\nconst readonlyHandlers = {\r\n    get: readonlyGet,\r\n    set(target, key) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`Set operation on key \"${String(key)}\" failed: target is readonly.`, target);\r\n        }\r\n        return true;\r\n    },\r\n    deleteProperty(target, key) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`Delete operation on key \"${String(key)}\" failed: target is readonly.`, target);\r\n        }\r\n        return true;\r\n    }\r\n};\r\nconst shallowReactiveHandlers = /*#__PURE__*/ extend({}, mutableHandlers, {\r\n    get: shallowGet,\r\n    set: shallowSet\r\n});\r\n// Props handlers are special in the sense that it should not unwrap top-level\r\n// refs (in order to allow refs to be explicitly passed down), but should\r\n// retain the reactivity of the normal readonly object.\r\nconst shallowReadonlyHandlers = /*#__PURE__*/ extend({}, readonlyHandlers, {\r\n    get: shallowReadonlyGet\r\n});\n\nconst toShallow = (value) => value;\r\nconst getProto = (v) => Reflect.getPrototypeOf(v);\r\nfunction get$1(target, key, isReadonly = false, isShallow = false) {\r\n    // #1772: readonly(reactive(Map)) should return readonly + reactive version\r\n    // of the value\r\n    target = target[\"__v_raw\" /* RAW */];\r\n    const rawTarget = toRaw(target);\r\n    const rawKey = toRaw(key);\r\n    if (!isReadonly) {\r\n        if (key !== rawKey) {\r\n            track(rawTarget, \"get\" /* GET */, key);\r\n        }\r\n        track(rawTarget, \"get\" /* GET */, rawKey);\r\n    }\r\n    const { has } = getProto(rawTarget);\r\n    const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\r\n    if (has.call(rawTarget, key)) {\r\n        return wrap(target.get(key));\r\n    }\r\n    else if (has.call(rawTarget, rawKey)) {\r\n        return wrap(target.get(rawKey));\r\n    }\r\n    else if (target !== rawTarget) {\r\n        // #3602 readonly(reactive(Map))\r\n        // ensure that the nested reactive `Map` can do tracking for itself\r\n        target.get(key);\r\n    }\r\n}\r\nfunction has$1(key, isReadonly = false) {\r\n    const target = this[\"__v_raw\" /* RAW */];\r\n    const rawTarget = toRaw(target);\r\n    const rawKey = toRaw(key);\r\n    if (!isReadonly) {\r\n        if (key !== rawKey) {\r\n            track(rawTarget, \"has\" /* HAS */, key);\r\n        }\r\n        track(rawTarget, \"has\" /* HAS */, rawKey);\r\n    }\r\n    return key === rawKey\r\n        ? target.has(key)\r\n        : target.has(key) || target.has(rawKey);\r\n}\r\nfunction size(target, isReadonly = false) {\r\n    target = target[\"__v_raw\" /* RAW */];\r\n    !isReadonly && track(toRaw(target), \"iterate\" /* ITERATE */, ITERATE_KEY);\r\n    return Reflect.get(target, 'size', target);\r\n}\r\nfunction add(value) {\r\n    value = toRaw(value);\r\n    const target = toRaw(this);\r\n    const proto = getProto(target);\r\n    const hadKey = proto.has.call(target, value);\r\n    if (!hadKey) {\r\n        target.add(value);\r\n        trigger(target, \"add\" /* ADD */, value, value);\r\n    }\r\n    return this;\r\n}\r\nfunction set$1(key, value) {\r\n    value = toRaw(value);\r\n    const target = toRaw(this);\r\n    const { has, get } = getProto(target);\r\n    let hadKey = has.call(target, key);\r\n    if (!hadKey) {\r\n        key = toRaw(key);\r\n        hadKey = has.call(target, key);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        checkIdentityKeys(target, has, key);\r\n    }\r\n    const oldValue = get.call(target, key);\r\n    target.set(key, value);\r\n    if (!hadKey) {\r\n        trigger(target, \"add\" /* ADD */, key, value);\r\n    }\r\n    else if (hasChanged(value, oldValue)) {\r\n        trigger(target, \"set\" /* SET */, key, value, oldValue);\r\n    }\r\n    return this;\r\n}\r\nfunction deleteEntry(key) {\r\n    const target = toRaw(this);\r\n    const { has, get } = getProto(target);\r\n    let hadKey = has.call(target, key);\r\n    if (!hadKey) {\r\n        key = toRaw(key);\r\n        hadKey = has.call(target, key);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        checkIdentityKeys(target, has, key);\r\n    }\r\n    const oldValue = get ? get.call(target, key) : undefined;\r\n    // forward the operation before queueing reactions\r\n    const result = target.delete(key);\r\n    if (hadKey) {\r\n        trigger(target, \"delete\" /* DELETE */, key, undefined, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction clear() {\r\n    const target = toRaw(this);\r\n    const hadItems = target.size !== 0;\r\n    const oldTarget = (process.env.NODE_ENV !== 'production')\r\n        ? isMap(target)\r\n            ? new Map(target)\r\n            : new Set(target)\r\n        : undefined;\r\n    // forward the operation before queueing reactions\r\n    const result = target.clear();\r\n    if (hadItems) {\r\n        trigger(target, \"clear\" /* CLEAR */, undefined, undefined, oldTarget);\r\n    }\r\n    return result;\r\n}\r\nfunction createForEach(isReadonly, isShallow) {\r\n    return function forEach(callback, thisArg) {\r\n        const observed = this;\r\n        const target = observed[\"__v_raw\" /* RAW */];\r\n        const rawTarget = toRaw(target);\r\n        const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\r\n        !isReadonly && track(rawTarget, \"iterate\" /* ITERATE */, ITERATE_KEY);\r\n        return target.forEach((value, key) => {\r\n            // important: make sure the callback is\r\n            // 1. invoked with the reactive map as `this` and 3rd arg\r\n            // 2. the value received should be a corresponding reactive/readonly.\r\n            return callback.call(thisArg, wrap(value), wrap(key), observed);\r\n        });\r\n    };\r\n}\r\nfunction createIterableMethod(method, isReadonly, isShallow) {\r\n    return function (...args) {\r\n        const target = this[\"__v_raw\" /* RAW */];\r\n        const rawTarget = toRaw(target);\r\n        const targetIsMap = isMap(rawTarget);\r\n        const isPair = method === 'entries' || (method === Symbol.iterator && targetIsMap);\r\n        const isKeyOnly = method === 'keys' && targetIsMap;\r\n        const innerIterator = target[method](...args);\r\n        const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\r\n        !isReadonly &&\r\n            track(rawTarget, \"iterate\" /* ITERATE */, isKeyOnly ? MAP_KEY_ITERATE_KEY : ITERATE_KEY);\r\n        // return a wrapped iterator which returns observed versions of the\r\n        // values emitted from the real iterator\r\n        return {\r\n            // iterator protocol\r\n            next() {\r\n                const { value, done } = innerIterator.next();\r\n                return done\r\n                    ? { value, done }\r\n                    : {\r\n                        value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),\r\n                        done\r\n                    };\r\n            },\r\n            // iterable protocol\r\n            [Symbol.iterator]() {\r\n                return this;\r\n            }\r\n        };\r\n    };\r\n}\r\nfunction createReadonlyMethod(type) {\r\n    return function (...args) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            const key = args[0] ? `on key \"${args[0]}\" ` : ``;\r\n            console.warn(`${capitalize(type)} operation ${key}failed: target is readonly.`, toRaw(this));\r\n        }\r\n        return type === \"delete\" /* DELETE */ ? false : this;\r\n    };\r\n}\r\nfunction createInstrumentations() {\r\n    const mutableInstrumentations = {\r\n        get(key) {\r\n            return get$1(this, key);\r\n        },\r\n        get size() {\r\n            return size(this);\r\n        },\r\n        has: has$1,\r\n        add,\r\n        set: set$1,\r\n        delete: deleteEntry,\r\n        clear,\r\n        forEach: createForEach(false, false)\r\n    };\r\n    const shallowInstrumentations = {\r\n        get(key) {\r\n            return get$1(this, key, false, true);\r\n        },\r\n        get size() {\r\n            return size(this);\r\n        },\r\n        has: has$1,\r\n        add,\r\n        set: set$1,\r\n        delete: deleteEntry,\r\n        clear,\r\n        forEach: createForEach(false, true)\r\n    };\r\n    const readonlyInstrumentations = {\r\n        get(key) {\r\n            return get$1(this, key, true);\r\n        },\r\n        get size() {\r\n            return size(this, true);\r\n        },\r\n        has(key) {\r\n            return has$1.call(this, key, true);\r\n        },\r\n        add: createReadonlyMethod(\"add\" /* ADD */),\r\n        set: createReadonlyMethod(\"set\" /* SET */),\r\n        delete: createReadonlyMethod(\"delete\" /* DELETE */),\r\n        clear: createReadonlyMethod(\"clear\" /* CLEAR */),\r\n        forEach: createForEach(true, false)\r\n    };\r\n    const shallowReadonlyInstrumentations = {\r\n        get(key) {\r\n            return get$1(this, key, true, true);\r\n        },\r\n        get size() {\r\n            return size(this, true);\r\n        },\r\n        has(key) {\r\n            return has$1.call(this, key, true);\r\n        },\r\n        add: createReadonlyMethod(\"add\" /* ADD */),\r\n        set: createReadonlyMethod(\"set\" /* SET */),\r\n        delete: createReadonlyMethod(\"delete\" /* DELETE */),\r\n        clear: createReadonlyMethod(\"clear\" /* CLEAR */),\r\n        forEach: createForEach(true, true)\r\n    };\r\n    const iteratorMethods = ['keys', 'values', 'entries', Symbol.iterator];\r\n    iteratorMethods.forEach(method => {\r\n        mutableInstrumentations[method] = createIterableMethod(method, false, false);\r\n        readonlyInstrumentations[method] = createIterableMethod(method, true, false);\r\n        shallowInstrumentations[method] = createIterableMethod(method, false, true);\r\n        shallowReadonlyInstrumentations[method] = createIterableMethod(method, true, true);\r\n    });\r\n    return [\r\n        mutableInstrumentations,\r\n        readonlyInstrumentations,\r\n        shallowInstrumentations,\r\n        shallowReadonlyInstrumentations\r\n    ];\r\n}\r\nconst [mutableInstrumentations, readonlyInstrumentations, shallowInstrumentations, shallowReadonlyInstrumentations] = /* #__PURE__*/ createInstrumentations();\r\nfunction createInstrumentationGetter(isReadonly, shallow) {\r\n    const instrumentations = shallow\r\n        ? isReadonly\r\n            ? shallowReadonlyInstrumentations\r\n            : shallowInstrumentations\r\n        : isReadonly\r\n            ? readonlyInstrumentations\r\n            : mutableInstrumentations;\r\n    return (target, key, receiver) => {\r\n        if (key === \"__v_isReactive\" /* IS_REACTIVE */) {\r\n            return !isReadonly;\r\n        }\r\n        else if (key === \"__v_isReadonly\" /* IS_READONLY */) {\r\n            return isReadonly;\r\n        }\r\n        else if (key === \"__v_raw\" /* RAW */) {\r\n            return target;\r\n        }\r\n        return Reflect.get(hasOwn(instrumentations, key) && key in target\r\n            ? instrumentations\r\n            : target, key, receiver);\r\n    };\r\n}\r\nconst mutableCollectionHandlers = {\r\n    get: /*#__PURE__*/ createInstrumentationGetter(false, false)\r\n};\r\nconst shallowCollectionHandlers = {\r\n    get: /*#__PURE__*/ createInstrumentationGetter(false, true)\r\n};\r\nconst readonlyCollectionHandlers = {\r\n    get: /*#__PURE__*/ createInstrumentationGetter(true, false)\r\n};\r\nconst shallowReadonlyCollectionHandlers = {\r\n    get: /*#__PURE__*/ createInstrumentationGetter(true, true)\r\n};\r\nfunction checkIdentityKeys(target, has, key) {\r\n    const rawKey = toRaw(key);\r\n    if (rawKey !== key && has.call(target, rawKey)) {\r\n        const type = toRawType(target);\r\n        console.warn(`Reactive ${type} contains both the raw and reactive ` +\r\n            `versions of the same object${type === `Map` ? ` as keys` : ``}, ` +\r\n            `which can lead to inconsistencies. ` +\r\n            `Avoid differentiating between the raw and reactive versions ` +\r\n            `of an object and only use the reactive version if possible.`);\r\n    }\r\n}\n\nconst reactiveMap = new WeakMap();\r\nconst shallowReactiveMap = new WeakMap();\r\nconst readonlyMap = new WeakMap();\r\nconst shallowReadonlyMap = new WeakMap();\r\nfunction targetTypeMap(rawType) {\r\n    switch (rawType) {\r\n        case 'Object':\r\n        case 'Array':\r\n            return 1 /* COMMON */;\r\n        case 'Map':\r\n        case 'Set':\r\n        case 'WeakMap':\r\n        case 'WeakSet':\r\n            return 2 /* COLLECTION */;\r\n        default:\r\n            return 0 /* INVALID */;\r\n    }\r\n}\r\nfunction getTargetType(value) {\r\n    return value[\"__v_skip\" /* SKIP */] || !Object.isExtensible(value)\r\n        ? 0 /* INVALID */\r\n        : targetTypeMap(toRawType(value));\r\n}\r\nfunction reactive(target) {\r\n    // if trying to observe a readonly proxy, return the readonly version.\r\n    if (isReadonly(target)) {\r\n        return target;\r\n    }\r\n    return createReactiveObject(target, false, mutableHandlers, mutableCollectionHandlers, reactiveMap);\r\n}\r\n/**\r\n * Return a shallowly-reactive copy of the original object, where only the root\r\n * level properties are reactive. It also does not auto-unwrap refs (even at the\r\n * root level).\r\n */\r\nfunction shallowReactive(target) {\r\n    return createReactiveObject(target, false, shallowReactiveHandlers, shallowCollectionHandlers, shallowReactiveMap);\r\n}\r\n/**\r\n * Creates a readonly copy of the original object. Note the returned copy is not\r\n * made reactive, but `readonly` can be called on an already reactive object.\r\n */\r\nfunction readonly(target) {\r\n    return createReactiveObject(target, true, readonlyHandlers, readonlyCollectionHandlers, readonlyMap);\r\n}\r\n/**\r\n * Returns a reactive-copy of the original object, where only the root level\r\n * properties are readonly, and does NOT unwrap refs nor recursively convert\r\n * returned properties.\r\n * This is used for creating the props proxy object for stateful components.\r\n */\r\nfunction shallowReadonly(target) {\r\n    return createReactiveObject(target, true, shallowReadonlyHandlers, shallowReadonlyCollectionHandlers, shallowReadonlyMap);\r\n}\r\nfunction createReactiveObject(target, isReadonly, baseHandlers, collectionHandlers, proxyMap) {\r\n    if (!isObject(target)) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`value cannot be made reactive: ${String(target)}`);\r\n        }\r\n        return target;\r\n    }\r\n    // target is already a Proxy, return it.\r\n    // exception: calling readonly() on a reactive object\r\n    if (target[\"__v_raw\" /* RAW */] &&\r\n        !(isReadonly && target[\"__v_isReactive\" /* IS_REACTIVE */])) {\r\n        return target;\r\n    }\r\n    // target already has corresponding Proxy\r\n    const existingProxy = proxyMap.get(target);\r\n    if (existingProxy) {\r\n        return existingProxy;\r\n    }\r\n    // only specific value types can be observed.\r\n    const targetType = getTargetType(target);\r\n    if (targetType === 0 /* INVALID */) {\r\n        return target;\r\n    }\r\n    const proxy = new Proxy(target, targetType === 2 /* COLLECTION */ ? collectionHandlers : baseHandlers);\r\n    proxyMap.set(target, proxy);\r\n    return proxy;\r\n}\r\nfunction isReactive(value) {\r\n    if (isReadonly(value)) {\r\n        return isReactive(value[\"__v_raw\" /* RAW */]);\r\n    }\r\n    return !!(value && value[\"__v_isReactive\" /* IS_REACTIVE */]);\r\n}\r\nfunction isReadonly(value) {\r\n    return !!(value && value[\"__v_isReadonly\" /* IS_READONLY */]);\r\n}\r\nfunction isShallow(value) {\r\n    return !!(value && value[\"__v_isShallow\" /* IS_SHALLOW */]);\r\n}\r\nfunction isProxy(value) {\r\n    return isReactive(value) || isReadonly(value);\r\n}\r\nfunction toRaw(observed) {\r\n    const raw = observed && observed[\"__v_raw\" /* RAW */];\r\n    return raw ? toRaw(raw) : observed;\r\n}\r\nfunction markRaw(value) {\r\n    def(value, \"__v_skip\" /* SKIP */, true);\r\n    return value;\r\n}\r\nconst toReactive = (value) => isObject(value) ? reactive(value) : value;\r\nconst toReadonly = (value) => isObject(value) ? readonly(value) : value;\n\nfunction trackRefValue(ref) {\r\n    if (shouldTrack && activeEffect) {\r\n        ref = toRaw(ref);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            trackEffects(ref.dep || (ref.dep = createDep()), {\r\n                target: ref,\r\n                type: \"get\" /* GET */,\r\n                key: 'value'\r\n            });\r\n        }\r\n        else {\r\n            trackEffects(ref.dep || (ref.dep = createDep()));\r\n        }\r\n    }\r\n}\r\nfunction triggerRefValue(ref, newVal) {\r\n    ref = toRaw(ref);\r\n    if (ref.dep) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            triggerEffects(ref.dep, {\r\n                target: ref,\r\n                type: \"set\" /* SET */,\r\n                key: 'value',\r\n                newValue: newVal\r\n            });\r\n        }\r\n        else {\r\n            triggerEffects(ref.dep);\r\n        }\r\n    }\r\n}\r\nfunction isRef(r) {\r\n    return !!(r && r.__v_isRef === true);\r\n}\r\nfunction ref(value) {\r\n    return createRef(value, false);\r\n}\r\nfunction shallowRef(value) {\r\n    return createRef(value, true);\r\n}\r\nfunction createRef(rawValue, shallow) {\r\n    if (isRef(rawValue)) {\r\n        return rawValue;\r\n    }\r\n    return new RefImpl(rawValue, shallow);\r\n}\r\nclass RefImpl {\r\n    constructor(value, __v_isShallow) {\r\n        this.__v_isShallow = __v_isShallow;\r\n        this.dep = undefined;\r\n        this.__v_isRef = true;\r\n        this._rawValue = __v_isShallow ? value : toRaw(value);\r\n        this._value = __v_isShallow ? value : toReactive(value);\r\n    }\r\n    get value() {\r\n        trackRefValue(this);\r\n        return this._value;\r\n    }\r\n    set value(newVal) {\r\n        newVal = this.__v_isShallow ? newVal : toRaw(newVal);\r\n        if (hasChanged(newVal, this._rawValue)) {\r\n            this._rawValue = newVal;\r\n            this._value = this.__v_isShallow ? newVal : toReactive(newVal);\r\n            triggerRefValue(this, newVal);\r\n        }\r\n    }\r\n}\r\nfunction triggerRef(ref) {\r\n    triggerRefValue(ref, (process.env.NODE_ENV !== 'production') ? ref.value : void 0);\r\n}\r\nfunction unref(ref) {\r\n    return isRef(ref) ? ref.value : ref;\r\n}\r\nconst shallowUnwrapHandlers = {\r\n    get: (target, key, receiver) => unref(Reflect.get(target, key, receiver)),\r\n    set: (target, key, value, receiver) => {\r\n        const oldValue = target[key];\r\n        if (isRef(oldValue) && !isRef(value)) {\r\n            oldValue.value = value;\r\n            return true;\r\n        }\r\n        else {\r\n            return Reflect.set(target, key, value, receiver);\r\n        }\r\n    }\r\n};\r\nfunction proxyRefs(objectWithRefs) {\r\n    return isReactive(objectWithRefs)\r\n        ? objectWithRefs\r\n        : new Proxy(objectWithRefs, shallowUnwrapHandlers);\r\n}\r\nclass CustomRefImpl {\r\n    constructor(factory) {\r\n        this.dep = undefined;\r\n        this.__v_isRef = true;\r\n        const { get, set } = factory(() => trackRefValue(this), () => triggerRefValue(this));\r\n        this._get = get;\r\n        this._set = set;\r\n    }\r\n    get value() {\r\n        return this._get();\r\n    }\r\n    set value(newVal) {\r\n        this._set(newVal);\r\n    }\r\n}\r\nfunction customRef(factory) {\r\n    return new CustomRefImpl(factory);\r\n}\r\nfunction toRefs(object) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isProxy(object)) {\r\n        console.warn(`toRefs() expects a reactive object but received a plain one.`);\r\n    }\r\n    const ret = isArray(object) ? new Array(object.length) : {};\r\n    for (const key in object) {\r\n        ret[key] = toRef(object, key);\r\n    }\r\n    return ret;\r\n}\r\nclass ObjectRefImpl {\r\n    constructor(_object, _key, _defaultValue) {\r\n        this._object = _object;\r\n        this._key = _key;\r\n        this._defaultValue = _defaultValue;\r\n        this.__v_isRef = true;\r\n    }\r\n    get value() {\r\n        const val = this._object[this._key];\r\n        return val === undefined ? this._defaultValue : val;\r\n    }\r\n    set value(newVal) {\r\n        this._object[this._key] = newVal;\r\n    }\r\n}\r\nfunction toRef(object, key, defaultValue) {\r\n    const val = object[key];\r\n    return isRef(val)\r\n        ? val\r\n        : new ObjectRefImpl(object, key, defaultValue);\r\n}\n\nclass ComputedRefImpl {\r\n    constructor(getter, _setter, isReadonly, isSSR) {\r\n        this._setter = _setter;\r\n        this.dep = undefined;\r\n        this.__v_isRef = true;\r\n        this._dirty = true;\r\n        this.effect = new ReactiveEffect(getter, () => {\r\n            if (!this._dirty) {\r\n                this._dirty = true;\r\n                triggerRefValue(this);\r\n            }\r\n        });\r\n        this.effect.computed = this;\r\n        this.effect.active = this._cacheable = !isSSR;\r\n        this[\"__v_isReadonly\" /* IS_READONLY */] = isReadonly;\r\n    }\r\n    get value() {\r\n        // the computed ref may get wrapped by other proxies e.g. readonly() #3376\r\n        const self = toRaw(this);\r\n        trackRefValue(self);\r\n        if (self._dirty || !self._cacheable) {\r\n            self._dirty = false;\r\n            self._value = self.effect.run();\r\n        }\r\n        return self._value;\r\n    }\r\n    set value(newValue) {\r\n        this._setter(newValue);\r\n    }\r\n}\r\nfunction computed(getterOrOptions, debugOptions, isSSR = false) {\r\n    let getter;\r\n    let setter;\r\n    const onlyGetter = isFunction(getterOrOptions);\r\n    if (onlyGetter) {\r\n        getter = getterOrOptions;\r\n        setter = (process.env.NODE_ENV !== 'production')\r\n            ? () => {\r\n                console.warn('Write operation failed: computed value is readonly');\r\n            }\r\n            : NOOP;\r\n    }\r\n    else {\r\n        getter = getterOrOptions.get;\r\n        setter = getterOrOptions.set;\r\n    }\r\n    const cRef = new ComputedRefImpl(getter, setter, onlyGetter || !setter, isSSR);\r\n    if ((process.env.NODE_ENV !== 'production') && debugOptions && !isSSR) {\r\n        cRef.effect.onTrack = debugOptions.onTrack;\r\n        cRef.effect.onTrigger = debugOptions.onTrigger;\r\n    }\r\n    return cRef;\r\n}\n\nvar _a;\r\nconst tick = /*#__PURE__*/ Promise.resolve();\r\nconst queue = [];\r\nlet queued = false;\r\nconst scheduler = (fn) => {\r\n    queue.push(fn);\r\n    if (!queued) {\r\n        queued = true;\r\n        tick.then(flush);\r\n    }\r\n};\r\nconst flush = () => {\r\n    for (let i = 0; i < queue.length; i++) {\r\n        queue[i]();\r\n    }\r\n    queue.length = 0;\r\n    queued = false;\r\n};\r\nclass DeferredComputedRefImpl {\r\n    constructor(getter) {\r\n        this.dep = undefined;\r\n        this._dirty = true;\r\n        this.__v_isRef = true;\r\n        this[_a] = true;\r\n        let compareTarget;\r\n        let hasCompareTarget = false;\r\n        let scheduled = false;\r\n        this.effect = new ReactiveEffect(getter, (computedTrigger) => {\r\n            if (this.dep) {\r\n                if (computedTrigger) {\r\n                    compareTarget = this._value;\r\n                    hasCompareTarget = true;\r\n                }\r\n                else if (!scheduled) {\r\n                    const valueToCompare = hasCompareTarget ? compareTarget : this._value;\r\n                    scheduled = true;\r\n                    hasCompareTarget = false;\r\n                    scheduler(() => {\r\n                        if (this.effect.active && this._get() !== valueToCompare) {\r\n                            triggerRefValue(this);\r\n                        }\r\n                        scheduled = false;\r\n                    });\r\n                }\r\n                // chained upstream computeds are notified synchronously to ensure\r\n                // value invalidation in case of sync access; normal effects are\r\n                // deferred to be triggered in scheduler.\r\n                for (const e of this.dep) {\r\n                    if (e.computed instanceof DeferredComputedRefImpl) {\r\n                        e.scheduler(true /* computedTrigger */);\r\n                    }\r\n                }\r\n            }\r\n            this._dirty = true;\r\n        });\r\n        this.effect.computed = this;\r\n    }\r\n    _get() {\r\n        if (this._dirty) {\r\n            this._dirty = false;\r\n            return (this._value = this.effect.run());\r\n        }\r\n        return this._value;\r\n    }\r\n    get value() {\r\n        trackRefValue(this);\r\n        // the computed ref may get wrapped by other proxies e.g. readonly() #3376\r\n        return toRaw(this)._get();\r\n    }\r\n}\r\n_a = \"__v_isReadonly\" /* IS_READONLY */;\r\nfunction deferredComputed(getter) {\r\n    return new DeferredComputedRefImpl(getter);\r\n}\n\nexport { EffectScope, ITERATE_KEY, ReactiveEffect, computed, customRef, deferredComputed, effect, effectScope, enableTracking, getCurrentScope, isProxy, isReactive, isReadonly, isRef, isShallow, markRaw, onScopeDispose, pauseTracking, proxyRefs, reactive, readonly, ref, resetTracking, shallowReactive, shallowReadonly, shallowRef, stop, toRaw, toRef, toRefs, track, trigger, triggerRef, unref };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}