{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.string.small.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport json from \"../assets/json/cards.json\";\nimport { useRoute } from \"vue-router\";\nexport default {\n  name: \"SCC0219TrabalhoWebEditCardView\",\n  data: function data() {\n    return {\n      router: useRoute(),\n      id: useRoute().query.id,\n      card: json[0],\n      cards: json,\n      cardname: \"\",\n      price: \"\",\n      marketPrice: \"\",\n      imagelink: \"\",\n      attack1Name: \"\",\n      attack1Text: \"\",\n      attack2Name: \"\",\n      attack2Text: \"\",\n      setName: \"\",\n      qtd: 0\n    };\n  },\n  mounted: function mounted() {\n    this.setName = this.card.set.name;\n    this.qtd = this.card.quantity;\n    this.cardname = this.card.name;\n    this.price = this.getCardLowPrice(this.card);\n    this.marketPrice = this.getCardHighPrice(this.card);\n    this.imagelink = this.card.images.small;\n\n    if (this.card.attacks != null && this.card.attacks[0] != null) {\n      this.attack1Name = this.card.attacks[0].name;\n      this.attack1Text = this.card.attacks[0].text;\n    }\n\n    if (this.card.attacks != null && this.card.attacks[1] != null) {\n      this.attack2Name = this.card.attacks[1].name;\n      this.attack2Text = this.card.attacks[1].text;\n    }\n\n    this.getCardFromDB();\n  },\n  methods: {\n    getCardFromDB: function getCardFromDB() {\n      var _this = this;\n\n      fetch(\"http://127.0.0.1:3000/cards/getCard\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          id: this.id\n        })\n      }).then(function (res) {\n        res.json().then(function (response) {\n          _this.card = response;\n          _this.setName = _this.card.set.name;\n          _this.qtd = _this.card.quantity;\n          _this.cardname = _this.card.name;\n          _this.price = _this.getCardLowPrice(_this.card);\n          _this.marketPrice = _this.getCardHighPrice(_this.card);\n          _this.imagelink = _this.card.images.small;\n\n          if (_this.card.attacks != null && _this.card.attacks[0] != null) {\n            _this.attack1Name = _this.card.attacks[0].name;\n            _this.attack1Text = _this.card.attacks[0].text;\n          }\n\n          if (_this.card.attacks != null && _this.card.attacks[1] != null) {\n            _this.attack2Name = _this.card.attacks[1].name;\n            _this.attack2Text = _this.card.attacks[1].text;\n          }\n        })[\"catch\"](function (err) {\n          alert(\"Erro ao procurar quantidade de cartas no estoque!\");\n          console.log(\"Erro: \" + err);\n        });\n      })[\"catch\"](function (err) {\n        console.log(\"Erro: \" + err);\n      });\n    },\n    edit_card: function edit_card(id) {\n      console.log(this.card._id);\n      this.card.name = this.cardname;\n      this.card.quantity = this.qtd;\n      this.card.name = this.cardname;\n      this.card.images.small = this.imagelink;\n      this.card.set.name = this.setName;\n      console.log(this.card.attacks);\n\n      if (this.card.attacks.length == 0 && this.attack1Name.length > 0) {\n        this.card.attacks.push({\n          name: this.attack1Name,\n          text: this.attack1Text\n        });\n      } else if (this.card.attacks.length > 0) {\n        this.card.attacks[0].name = this.attack1Name;\n        this.card.attacks[0].text = this.attack1Text;\n      }\n\n      if (this.card.attacks.length == 0 && this.attack2Name.length > 0) {\n        this.card.attacks.push({\n          name: this.attack2Name,\n          text: this.attack2Text\n        });\n      } else if (this.card.attacks.length > 0) {\n        if (this.card.attacks[1] == null) {\n          this.card.attacks.push({\n            name: this.attack2Name,\n            text: this.attack2Text\n          });\n        } else {\n          this.card.attacks[1].name = this.attack2Name;\n          this.card.attacks[1].text = this.attack2Text;\n        }\n      } // Se o card não tiver preço definido no banco, incluir em seus dados\n\n\n      if (this.card.tcgplayer == null) {\n        this.card.tcgplayer = {\n          prices: {\n            holofoil: {\n              low: this.price,\n              market: this.marketPrice\n            }\n          }\n        };\n      } else if (this.card.tcgplayer.prices == null) {\n        this.card.tcgplayer.prices = {\n          prices: {\n            holofoil: {\n              low: this.price,\n              market: this.marketPrice\n            }\n          }\n        };\n      } else if (this.card.tcgplayer.prices.holofoil == null) {\n        console.log(this.card.tcgplayer.prices);\n        this.card.tcgplayer.prices.holofoil = {\n          low: this.price,\n          market: this.marketPrice\n        };\n      } else if (this.card.tcgplayer.prices.holofoil != null) {\n        this.card.tcgplayer.prices.holofoil.low = this.price;\n        this.card.tcgplayer.prices.holofoil.market = this.marketPrice;\n      } else if (this.card.tcgplayer.prices.normal != null) {\n        this.card.tcgplayer.prices.normal.low = this.price;\n        this.card.tcgplayer.prices.normal.market = this.marketPrice;\n      } // Remover o campo _id dos dados que serão atualizados\n\n\n      delete this.card._id;\n      console.log(this.card); // Chamar a função do backend para modificar as informações da carta\n\n      fetch(\"http://127.0.0.1:3000/cards/updateCardById\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          data: this.card\n        })\n      }).then(function (res) {\n        res.json().then(function (response) {\n          alert(\"Carta atualizada com sucesso!\");\n        })[\"catch\"](function (err) {\n          alert(\"Erro ao atualizar carta!\");\n          console.log(\"Erro: \" + err);\n        });\n      })[\"catch\"](function (err) {\n        console.log(\"Erro: \" + err);\n      });\n      window.scrollTo(0, 0);\n      this.$router.push({\n        name: \"home\"\n      });\n    },\n    getCardLowPrice: function getCardLowPrice(card) {\n      if (card.tcgplayer == null) return 5.5;\n      if (card.tcgplayer.prices == null) return 5.5;\n      if (card.tcgplayer.prices.holofoil != null) return card.tcgplayer.prices.holofoil.low;\n      if (card.tcgplayer.prices.normal != null) return card.tcgplayer.prices.normal.low;\n      return 5.5;\n    },\n    getCardHighPrice: function getCardHighPrice(card) {\n      if (card.tcgplayer == null) return 6.5;\n      if (card.tcgplayer.prices == null) return 6.5;\n      if (card.tcgplayer.prices.holofoil != null) return card.tcgplayer.prices.holofoil.market;\n      if (card.tcgplayer.prices.normal != null) return card.tcgplayer.prices.normal.market;\n      return 6.5;\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["json","useRoute","name","data","router","id","query","card","cards","cardname","price","marketPrice","imagelink","attack1Name","attack1Text","attack2Name","attack2Text","setName","qtd","mounted","set","quantity","getCardLowPrice","getCardHighPrice","images","small","attacks","text","getCardFromDB","methods","fetch","method","headers","Accept","body","JSON","stringify","then","res","response","err","alert","console","log","edit_card","_id","length","push","tcgplayer","prices","holofoil","low","market","normal","window","scrollTo","$router"],"sourceRoot":"","sources":["/home/dead/trabalho_web/SCC0219_Trabalho_Web/src/views/EditCardView.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"container background-light-light-blue my-5 p-6\">\n      <!-- <h1 class=\"title is-2\">Welcome back adminzao</h1> -->\n      <h2 class=\"collapse-header title is-3\">Edit a Card</h2>\n      <div class=\"background-white mx-5\">\n        <form v-on:submit.prevent=\"edit_card(card._id)\">\n          <div class=\"columns\">\n            <div class=\"column px-5\">\n              Card Name\n              <div class=\"input-container\">\n                <input\n                  class=\"input\"\n                  type=\"text\"\n                  placeholder=\"Card Name\"\n                  name=\"cardName\"\n                  v-model=\"cardname\"\n                  required\n                />\n              </div>\n              Card Set Name\n              <div class=\"input-container\">\n                <input\n                  class=\"input\"\n                  type=\"text\"\n                  placeholder=\"Card Set Name\"\n                  name=\"cardSetName\"\n                  v-model=\"setName\"\n                />\n              </div>\n              Low Price of the card\n              <div class=\"input-container\">\n                <input\n                  class=\"input\"\n                  type=\"Number\"\n                  placeholder=\"10.00\"\n                  min=\"0\"\n                  step=\"0.01\"\n                  name=\"cardPrice\"\n                  v-model=\"price\"\n                />\n              </div>\n              Market Price of the card\n              <div class=\"input-container\">\n                <input\n                  class=\"input\"\n                  type=\"Number\"\n                  placeholder=\"10.00\"\n                  min=\"0\"\n                  step=\"0.01\"\n                  name=\"cardPrice\"\n                  v-model=\"marketPrice\"\n                />\n              </div>\n              Stock Quantity\n              <div class=\"input-container\">\n                <input\n                  v-model=\"qtd\"\n                  class=\"input\"\n                  type=\"Number\"\n                  placeholder=\"10\"\n                  min=\"0\"\n                  step=\"1\"\n                  name=\"cardQuantity\"\n                />\n              </div>\n              Card Image URL\n              <div class=\"input-container\">\n                <input\n                  class=\"input\"\n                  type=\"text\"\n                  name=\"cardImage\"\n                  placeholder=\"http://sample.com/pokemon.png\"\n                  v-model=\"imagelink\"\n                />\n              </div>\n              <br />\n              <br />\n              <br />\n              <br />\n              <div class=\"input-container\">\n                <button\n                  class=\"button is-primary\"\n                  type=\"submit\"\n                  name=\"cardSubmit\"\n                >\n                  Edit card\n                </button>\n              </div>\n            </div>\n            <div class=\"column px-5\">\n              <b>Attack 1</b>\n              <br />\n              Name\n              <div class=\"input-container\">\n                <input\n                  class=\"input\"\n                  type=\"text\"\n                  placeholder=\"Attack1 Name\"\n                  name=\"cardAttack1Name\"\n                  v-model=\"attack1Name\"\n                />\n                Text\n              </div>\n              <div class=\"input-container\">\n                <textarea\n                  rows=\"9\"\n                  class=\"textarea\"\n                  type=\"text\"\n                  placeholder=\"Attack1 Text\"\n                  name=\"cardAttack1Text\"\n                  v-model=\"attack1Text\"\n                ></textarea>\n              </div>\n            </div>\n            <div class=\"column px-5\">\n              <b>Attack 2</b>\n              <br />\n              Name\n              <div class=\"input-container\">\n                <input\n                  class=\"input\"\n                  type=\"text\"\n                  placeholder=\"Attack2 Name\"\n                  name=\"cardAttack2Name\"\n                  v-model=\"attack2Name\"\n                />\n              </div>\n              Text\n              <div class=\"input-container\">\n                <textarea\n                  rows=\"9\"\n                  class=\"textarea\"\n                  type=\"text\"\n                  placeholder=\"Attack2 Text\"\n                  name=\"cardAttack2Text\"\n                  v-model=\"attack2Text\"\n                ></textarea>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport json from \"../assets/json/cards.json\";\nimport { useRoute } from \"vue-router\";\n\nexport default {\n  name: \"SCC0219TrabalhoWebEditCardView\",\n\n  data() {\n    return {\n      router: useRoute(),\n      id: useRoute().query.id,\n      card: json[0],\n      cards: json,\n      cardname: \"\",\n      price: \"\",\n      marketPrice: \"\",\n      imagelink: \"\",\n      attack1Name: \"\",\n      attack1Text: \"\",\n      attack2Name: \"\",\n      attack2Text: \"\",\n      setName: \"\",\n      qtd: 0,\n    };\n  },\n\n  mounted() {\n    this.setName = this.card.set.name;\n    this.qtd = this.card.quantity;\n    this.cardname = this.card.name;\n    this.price = this.getCardLowPrice(this.card);\n    this.marketPrice = this.getCardHighPrice(this.card);\n    this.imagelink = this.card.images.small;\n    if (this.card.attacks != null && this.card.attacks[0] != null) {\n      this.attack1Name = this.card.attacks[0].name;\n      this.attack1Text = this.card.attacks[0].text;\n    }\n    if (this.card.attacks != null && this.card.attacks[1] != null) {\n      this.attack2Name = this.card.attacks[1].name;\n      this.attack2Text = this.card.attacks[1].text;\n    }\n    this.getCardFromDB();\n  },\n\n  methods: {\n    getCardFromDB() {\n      fetch(\"http://127.0.0.1:3000/cards/getCard\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          id: this.id,\n        }),\n      })\n        .then((res) => {\n          res\n            .json()\n            .then((response) => {\n              this.card = response;\n              this.setName = this.card.set.name;\n              this.qtd = this.card.quantity;\n              this.cardname = this.card.name;\n              this.price = this.getCardLowPrice(this.card);\n              this.marketPrice = this.getCardHighPrice(this.card);\n              this.imagelink = this.card.images.small;\n              if (this.card.attacks != null && this.card.attacks[0] != null) {\n                this.attack1Name = this.card.attacks[0].name;\n                this.attack1Text = this.card.attacks[0].text;\n              }\n              if (this.card.attacks != null && this.card.attacks[1] != null) {\n                this.attack2Name = this.card.attacks[1].name;\n                this.attack2Text = this.card.attacks[1].text;\n              }\n            })\n            .catch((err) => {\n              alert(\"Erro ao procurar quantidade de cartas no estoque!\");\n              console.log(\"Erro: \" + err);\n            });\n        })\n        .catch((err) => {\n          console.log(\"Erro: \" + err);\n        });\n    },\n    edit_card(id) {\n      console.log(this.card._id);\n      this.card.name = this.cardname;\n      this.card.quantity = this.qtd;\n      this.card.name = this.cardname;\n      this.card.images.small = this.imagelink;\n      this.card.set.name = this.setName;\n      console.log(this.card.attacks);\n      if (this.card.attacks.length == 0 && this.attack1Name.length > 0) {\n        this.card.attacks.push({\n          name: this.attack1Name,\n          text: this.attack1Text,\n        });\n      } else if (this.card.attacks.length > 0) {\n        this.card.attacks[0].name = this.attack1Name;\n        this.card.attacks[0].text = this.attack1Text;\n      }\n      if (this.card.attacks.length == 0 && this.attack2Name.length > 0) {\n        this.card.attacks.push({\n          name: this.attack2Name,\n          text: this.attack2Text,\n        });\n      } else if (this.card.attacks.length > 0) {\n        if (this.card.attacks[1] == null) {\n          this.card.attacks.push({\n            name: this.attack2Name,\n            text: this.attack2Text,\n          });\n        } else {\n          this.card.attacks[1].name = this.attack2Name;\n          this.card.attacks[1].text = this.attack2Text;\n        }\n      }\n\n      // Se o card não tiver preço definido no banco, incluir em seus dados\n      if (this.card.tcgplayer == null) {\n        this.card.tcgplayer = {\n          prices: {\n            holofoil: {\n              low: this.price,\n              market: this.marketPrice,\n            },\n          },\n        };\n      } else if (this.card.tcgplayer.prices == null) {\n        this.card.tcgplayer.prices = {\n          prices: {\n            holofoil: {\n              low: this.price,\n              market: this.marketPrice,\n            },\n          },\n        };\n      } else if (this.card.tcgplayer.prices.holofoil == null) {\n        console.log(this.card.tcgplayer.prices);\n        this.card.tcgplayer.prices.holofoil = {\n          low: this.price,\n          market: this.marketPrice,\n        };\n      } else if (this.card.tcgplayer.prices.holofoil != null) {\n        this.card.tcgplayer.prices.holofoil.low = this.price;\n        this.card.tcgplayer.prices.holofoil.market = this.marketPrice;\n      } else if (this.card.tcgplayer.prices.normal != null) {\n        this.card.tcgplayer.prices.normal.low = this.price;\n        this.card.tcgplayer.prices.normal.market = this.marketPrice;\n      }\n\n      // Remover o campo _id dos dados que serão atualizados\n      delete this.card._id;\n      console.log(this.card);\n\n      // Chamar a função do backend para modificar as informações da carta\n      fetch(\"http://127.0.0.1:3000/cards/updateCardById\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          data: this.card,\n        }),\n      })\n        .then((res) => {\n          res\n            .json()\n            .then((response) => {\n              alert(\"Carta atualizada com sucesso!\");\n            })\n            .catch((err) => {\n              alert(\"Erro ao atualizar carta!\");\n              console.log(\"Erro: \" + err);\n            });\n        })\n        .catch((err) => {\n          console.log(\"Erro: \" + err);\n        });\n\n      window.scrollTo(0, 0);\n      this.$router.push({\n        name: \"home\",\n      });\n    },\n    getCardLowPrice(card) {\n      if (card.tcgplayer == null) return 5.5;\n      if (card.tcgplayer.prices == null) return 5.5;\n      if (card.tcgplayer.prices.holofoil != null)\n        return card.tcgplayer.prices.holofoil.low;\n      if (card.tcgplayer.prices.normal != null)\n        return card.tcgplayer.prices.normal.low;\n      return 5.5;\n    },\n    getCardHighPrice(card) {\n      if (card.tcgplayer == null) return 6.5;\n      if (card.tcgplayer.prices == null) return 6.5;\n      if (card.tcgplayer.prices.holofoil != null)\n        return card.tcgplayer.prices.holofoil.market;\n      if (card.tcgplayer.prices.normal != null)\n        return card.tcgplayer.prices.normal.market;\n      return 6.5;\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}