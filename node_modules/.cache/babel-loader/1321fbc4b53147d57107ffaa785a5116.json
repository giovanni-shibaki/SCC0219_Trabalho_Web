{"ast":null,"code":"import \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nexport default {\n  name: \"SCC0219TrabalhoWebCartView\",\n  data: function data() {\n    return {\n      cart: [],\n      totalPrice: 0\n    };\n  },\n  beforeMount: function beforeMount() {\n    // localStorage.cart armazena um JSON com as infos do carrinho !!! JSON, não o objeto !!!\n    if (localStorage.cart == \"\") localStorage.cart = \"[]\";\n    this.cart = JSON.parse(localStorage.cart);\n    this.calculatePrice();\n  },\n  mounted: function mounted() {},\n  methods: {\n    scrollToTop: function scrollToTop(id) {\n      window.scrollTo(0, 0);\n    },\n    getCardLowPrice: function getCardLowPrice(card) {\n      if (card.tcgplayer == null) return 5.5;\n      if (card.tcgplayer.prices == null) return 5.5;\n      if (card.tcgplayer.prices.holofoil != null) return card.tcgplayer.prices.holofoil.low;\n      if (card.tcgplayer.prices.normal != null) return card.tcgplayer.prices.normal.low;\n      return 5.5;\n    },\n    removeItem: function removeItem(item) {\n      item = JSON.parse(JSON.stringify(item));\n      var cart = localStorage.cart == \"\" ? [] : JSON.parse(localStorage.cart);\n      cart = cart.filter(function (c) {\n        return c.card.id != item.card.id;\n      });\n      localStorage.cart = JSON.stringify(cart);\n      this.cart = JSON.parse(localStorage.cart);\n      this.calculatePrice();\n    },\n    calculatePrice: function calculatePrice() {\n      var _this = this;\n\n      var price = 0;\n      var cart = JSON.parse(JSON.stringify(this.cart));\n      cart.forEach(function (item) {\n        price += _this.getCardLowPrice(item.card) * item.qtd;\n      });\n      this.totalPrice = price;\n      localStorage.totalPrice = price;\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;AAkFA,eAAe;EACbA,IAAI,EAAE,4BADO;EAGbC,IAHa,kBAGN;IACL,OAAO;MACLC,IAAI,EAAE,EADD;MAELC,UAAU,EAAE;IAFP,CAAP;EAID,CARY;EASbC,WATa,yBASC;IACZ;IACA,IAAIC,YAAY,CAACH,IAAb,IAAqB,EAAzB,EAA6BG,YAAY,CAACH,IAAb,GAAoB,IAApB;IAC7B,KAAKA,IAAL,GAAYI,IAAI,CAACC,KAAL,CAAWF,YAAY,CAACH,IAAxB,CAAZ;IACA,KAAKM,cAAL;EACD,CAdY;EAgBbC,OAhBa,qBAgBH,CAAE,CAhBC;EAkBbC,OAAO,EAAE;IACPC,WADO,uBACKC,EADL,EACS;MACdC,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;IACD,CAHM;IAIPC,eAJO,2BAISC,IAJT,EAIe;MACpB,IAAIA,IAAI,CAACC,SAAL,IAAkB,IAAtB,EAA4B,OAAO,GAAP;MAC5B,IAAID,IAAI,CAACC,SAAL,CAAeC,MAAf,IAAyB,IAA7B,EAAmC,OAAO,GAAP;MACnC,IAAIF,IAAI,CAACC,SAAL,CAAeC,MAAf,CAAsBC,QAAtB,IAAkC,IAAtC,EACE,OAAOH,IAAI,CAACC,SAAL,CAAeC,MAAf,CAAsBC,QAAtB,CAA+BC,GAAtC;MACF,IAAIJ,IAAI,CAACC,SAAL,CAAeC,MAAf,CAAsBG,MAAtB,IAAgC,IAApC,EACE,OAAOL,IAAI,CAACC,SAAL,CAAeC,MAAf,CAAsBG,MAAtB,CAA6BD,GAApC;MACF,OAAO,GAAP;IACD,CAZM;IAaPE,UAbO,sBAaIC,IAbJ,EAaU;MACfA,IAAG,GAAIjB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACkB,SAAL,CAAeD,IAAf,CAAX,CAAP;MACA,IAAIrB,IAAG,GAAIG,YAAY,CAACH,IAAb,IAAqB,EAArB,GAA0B,EAA1B,GAA+BI,IAAI,CAACC,KAAL,CAAWF,YAAY,CAACH,IAAxB,CAA1C;MACAA,IAAG,GAAIA,IAAI,CAACuB,MAAL,CAAY,UAACC,CAAD;QAAA,OAAOA,CAAC,CAACV,IAAF,CAAOJ,EAAP,IAAaW,IAAI,CAACP,IAAL,CAAUJ,EAA9B;MAAA,CAAZ,CAAP;MACAP,YAAY,CAACH,IAAb,GAAoBI,IAAI,CAACkB,SAAL,CAAetB,IAAf,CAApB;MACA,KAAKA,IAAL,GAAYI,IAAI,CAACC,KAAL,CAAWF,YAAY,CAACH,IAAxB,CAAZ;MACA,KAAKM,cAAL;IACD,CApBM;IAqBPA,cArBO,4BAqBU;MAAA;;MACf,IAAImB,KAAI,GAAI,CAAZ;MACA,IAAIzB,IAAG,GAAII,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACkB,SAAL,CAAe,KAAKtB,IAApB,CAAX,CAAX;MACAA,IAAI,CAAC0B,OAAL,CAAa,UAACL,IAAD,EAAU;QACrBI,KAAI,IAAK,KAAI,CAACZ,eAAL,CAAqBQ,IAAI,CAACP,IAA1B,IAAkCO,IAAI,CAACM,GAAhD;MACD,CAFD;MAGA,KAAK1B,UAAL,GAAkBwB,KAAlB;MACAtB,YAAY,CAACF,UAAb,GAA0BwB,KAA1B;IACD;EA7BM;AAlBI,CAAf","names":["name","data","cart","totalPrice","beforeMount","localStorage","JSON","parse","calculatePrice","mounted","methods","scrollToTop","id","window","scrollTo","getCardLowPrice","card","tcgplayer","prices","holofoil","low","normal","removeItem","item","stringify","filter","c","price","forEach","qtd"],"sourceRoot":"","sources":["/home/dead/trabalho_web/SCC0219_Trabalho_Web/src/views/CartView.vue"],"sourcesContent":["<template>\r\n  <div class=\"background-light-light-blue\" id=\"cart-page-container\">\r\n    <section class=\"section\">\r\n      <h2 class=\"title is-3\">Cart</h2>\r\n    </section>\r\n    <section class=\"section all-products\">\r\n      <div class=\"card\" v-for=\"item in this.cart\" v-bind:key=\"item.card.id\">\r\n        <img\r\n          :src=\"item.card.images.small\"\r\n          :alt=\"item.card.name\"\r\n          class=\"card-image\"\r\n          @click=\"\r\n            scrollToTop(-1),\r\n              $router.push({\r\n                name: 'itemPage',\r\n                query: { id: item.card.id },\r\n              })\r\n          \"\r\n          style=\"cursor: pointer\"\r\n        />\r\n        <div class=\"card-description\">\r\n          <p class=\"card-type\">{{ item.card.supertype }}</p>\r\n          <h3\r\n            class=\"card-name\"\r\n            @click=\"\r\n              scrollToTop(-1),\r\n                $router.push({\r\n                  name: 'itemPage',\r\n                  query: { id: item.card.id },\r\n                })\r\n            \"\r\n            style=\"cursor: pointer\"\r\n          >\r\n            {{ item.card.name }}\r\n          </h3>\r\n          <div class=\"card-stars\">\r\n            <i class=\"fa fa-star\"></i>\r\n            <i class=\"fa fa-star\"></i>\r\n            <i class=\"fa fa-star\"></i>\r\n            <i class=\"fa-solid fa-star-sharp-half\"></i>\r\n            <i class=\"fa fa-star-o\"></i>\r\n          </div>\r\n          <p class=\"card-seller\">By {{ item.card.set.name }}</p>\r\n          <div class=\"card-buy\">\r\n            <p class=\"card-price\">\r\n              ${{ getCardLowPrice(item.card) }} x {{ item.qtd }}\r\n            </p>\r\n            <button\r\n              class=\"background-red card-add-cart\"\r\n              @click=\"removeItem(item)\"\r\n            >\r\n              <i class=\"fa fa-trash\"></i>\r\n              Remove\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n    <section class=\"section\">\r\n      <div\r\n        class=\"tile is-5 background-light-blue py-5 px-0 is-vertical has-text-centered has-text-weight-semibold has-text-black\"\r\n      >\r\n        <div class=\"mx-0\">Total price: ${{ totalPrice }}</div>\r\n      </div>\r\n      <router-link to=\"/catalogue?page=0\">\r\n        <button class=\"button is-warning m-3\" @click=\"scrollToTop()\">\r\n          Continue Shopping\r\n        </button>\r\n      </router-link>\r\n      <router-link to=\"/payment\">\r\n        <button\r\n          type=\"button\"\r\n          class=\"button is-primary m-3\"\r\n          @click=\"scrollToTop()\"\r\n        >\r\n          Proceed to Payment\r\n        </button>\r\n      </router-link>\r\n    </section>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: \"SCC0219TrabalhoWebCartView\",\r\n\r\n  data() {\r\n    return {\r\n      cart: [],\r\n      totalPrice: 0,\r\n    };\r\n  },\r\n  beforeMount() {\r\n    // localStorage.cart armazena um JSON com as infos do carrinho !!! JSON, não o objeto !!!\r\n    if (localStorage.cart == \"\") localStorage.cart = \"[]\";\r\n    this.cart = JSON.parse(localStorage.cart);\r\n    this.calculatePrice();\r\n  },\r\n\r\n  mounted() {},\r\n\r\n  methods: {\r\n    scrollToTop(id) {\r\n      window.scrollTo(0, 0);\r\n    },\r\n    getCardLowPrice(card) {\r\n      if (card.tcgplayer == null) return 5.5;\r\n      if (card.tcgplayer.prices == null) return 5.5;\r\n      if (card.tcgplayer.prices.holofoil != null)\r\n        return card.tcgplayer.prices.holofoil.low;\r\n      if (card.tcgplayer.prices.normal != null)\r\n        return card.tcgplayer.prices.normal.low;\r\n      return 5.5;\r\n    },\r\n    removeItem(item) {\r\n      item = JSON.parse(JSON.stringify(item));\r\n      let cart = localStorage.cart == \"\" ? [] : JSON.parse(localStorage.cart);\r\n      cart = cart.filter((c) => c.card.id != item.card.id);\r\n      localStorage.cart = JSON.stringify(cart);\r\n      this.cart = JSON.parse(localStorage.cart);\r\n      this.calculatePrice();\r\n    },\r\n    calculatePrice() {\r\n      let price = 0;\r\n      let cart = JSON.parse(JSON.stringify(this.cart));\r\n      cart.forEach((item) => {\r\n        price += this.getCardLowPrice(item.card) * item.qtd;\r\n      });\r\n      this.totalPrice = price;\r\n      localStorage.totalPrice = price;\r\n    },\r\n  },\r\n};\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}